package xxqp.oracle.apps.ar.pdft.altafitec.mgr.server;

import java.sql.SQLException;

import java.util.HashSet;
import java.util.Set;

import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import oracle.apps.fnd.framework.server.OADBTransaction;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewCriteria;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MgrAMImpl extends OAApplicationModuleImpl {
    /**This is the default constructor (do not remove)
     */
    public MgrAMImpl() {
    }

    /**Sample main for debugging Business Components code using the tester.
     */
    public static void main(String[] args) {
        launchTester("xxqp.oracle.apps.ar.pdft.altafitec.mgr.server", /* package name */
      "MgrAMLocal" /* Configuration Name */);
    }


    public XxqpPdftMgrCatalogosVORowImpl agregaRegistro(String pStrCatalogoValue) {
        OADBTransaction  oADBTransaction = this.getOADBTransaction();
        XxqpPdftMgrCatalogosVOImpl xxqpPdftMgrCatalogosVOImpl = getXxqpPdftMgrCatalogosVO1(); 
        XxqpPdftMgrCatalogosVORowImpl xxqpPdftMgrCatalogosVORowImpl = null; 
        XxqpPdftMgrCatalogosVORowImpl retval = null; 
        if(null!=xxqpPdftMgrCatalogosVOImpl){
          if(!xxqpPdftMgrCatalogosVOImpl.isPreparedForExecution()){
              System.out.println("EjecutaQuery");
              xxqpPdftMgrCatalogosVOImpl.executeQuery();
          }

          oracle.jbo.domain.Number numNumeroLinea = new oracle.jbo.domain.Number(xxqpPdftMgrCatalogosVOImpl.getFetchedRowCount()+1);
            xxqpPdftMgrCatalogosVOImpl.first(); 
           xxqpPdftMgrCatalogosVORowImpl = (XxqpPdftMgrCatalogosVORowImpl)xxqpPdftMgrCatalogosVOImpl.createRow();
           oracle.jbo.domain.Number numCatalogoID = oADBTransaction.getSequenceValue("XXQP_PDFT_MGR_CATALOGOS_S");
            xxqpPdftMgrCatalogosVORowImpl.setId(numCatalogoID);
            xxqpPdftMgrCatalogosVORowImpl.setNumeroLinea(numNumeroLinea);
            xxqpPdftMgrCatalogosVORowImpl.setLookupType(pStrCatalogoValue);
            xxqpPdftMgrCatalogosVORowImpl.setLookupCode("");
            xxqpPdftMgrCatalogosVORowImpl.setDescription("");
            xxqpPdftMgrCatalogosVOImpl.insertRow(xxqpPdftMgrCatalogosVORowImpl);
            retval = (XxqpPdftMgrCatalogosVORowImpl)xxqpPdftMgrCatalogosVOImpl.first();
            
         /**   oADBTransaction.commit(); **/
        } /** END if(null!=xxqpPdftMgrCatalogosVOImpl){ **/
        
        return retval; 
        
    }


    public void initMgrCatalogosVO(String pStrCatalogoValue) {
        XxqpPdftMgrCatalogosVOImpl xxqpPdftMgrCatalogosVOImpl = getXxqpPdftMgrCatalogosVO1(); 
        XxqpPdftMgrCatalogosVORowImpl xxqpPdftMgrCatalogosVORowImpl = null; 
        if(null!=xxqpPdftMgrCatalogosVOImpl){
           /*********************************************************************
            RowSetIterator  iterator = xxqpPdftMgrCatalogosVOImpl.createRowSetIterator(null);
            while(iterator.hasNext()){
                xxqpPdftMgrCatalogosVORowImpl = (XxqpPdftMgrCatalogosVORowImpl)iterator.next();
                if(null==xxqpPdftMgrCatalogosVORowImpl.getLookupCode()&&null==xxqpPdftMgrCatalogosVORowImpl.getDescription()){
                  
                    xxqpPdftMgrCatalogosVORowImpl.remove();
                    this.getOADBTransaction().commit();
                }
            }
           *********************************************************************/
            
            xxqpPdftMgrCatalogosVOImpl.initByCatalogoValue(pStrCatalogoValue);
        }
    }

    public void grabarInfo() {
         
        
    try{
    this.getOADBTransaction().commit();
    }catch(oracle.jbo.DMLConstraintException sqle){
      throw new OAException("SQLException "+sqle.getErrorCode()+" ,"+sqle.getMessage(),OAException.ERROR); 
    }
    }

    public void validaUniqueKey() {
        XxqpPdftMgrCatalogosVOImpl xxqpPdftMgrCatalogosVOImpl = getXxqpPdftMgrCatalogosVO1();
        XxqpPdftMgrCatalogosVORowImpl xxqpPdftMgrCatalogosVORowImpl = null; 
        java.util.Set<String> set = new java.util.HashSet<String>();
        oracle.jbo.domain.Number numCount = new oracle.jbo.domain.Number(0);
        if(null!=xxqpPdftMgrCatalogosVOImpl){
          RowSetIterator iterator =  xxqpPdftMgrCatalogosVOImpl.createRowSetIterator(null);
          while(iterator.hasNext()){
              numCount = numCount.add(1);
              xxqpPdftMgrCatalogosVORowImpl = (XxqpPdftMgrCatalogosVORowImpl)iterator.next(); 
              if(null== xxqpPdftMgrCatalogosVORowImpl.getLookupCode()&&null==xxqpPdftMgrCatalogosVORowImpl.getDescription()){
              continue;
              }
              String strLookupType =  xxqpPdftMgrCatalogosVORowImpl.getLookupType().toUpperCase();
              String strLookupCode = xxqpPdftMgrCatalogosVORowImpl.getLookupCode().toUpperCase();
             
              boolean existsRecord =set.add(strLookupType+"-"+strLookupCode); 
              if(!existsRecord){
                throw new OAException("Ya Existe un registro con este valor:"+xxqpPdftMgrCatalogosVORowImpl.getLookupCode()); 
              }
              String strNewLookupCode = strLookupCode.replaceAll("\\s","_");
              xxqpPdftMgrCatalogosVORowImpl.setLookupCode(strNewLookupCode);
              xxqpPdftMgrCatalogosVORowImpl.setNumeroLinea(numCount);
          }
            iterator.closeRowSetIterator();
        }
    }

    public void deleteRecord(String pStrCatalogoId) {
     oracle.jbo.domain.Number numCatalogoID = null;
        try {
            numCatalogoID = new oracle.jbo.domain.Number(pStrCatalogoId);
        } catch (SQLException sqle) {
           throw new OAException("SQLException metodo deleteRecord parametro:"+pStrCatalogoId,OAException.ERROR); 
        }
        XxqpPdftMgrCatalogosVOImpl xxqpPdftMgrCatalogosVOImpl = getXxqpPdftMgrCatalogosVO1();
        XxqpPdftMgrCatalogosVORowImpl xxqpPdftMgrCatalogosVORowImpl = null; 
        
        java.util.Set<String> set = new java.util.HashSet<String>();
        RowSetIterator iteratorUK =  xxqpPdftMgrCatalogosVOImpl.createRowSetIterator(null);
        while(iteratorUK.hasNext()){
            xxqpPdftMgrCatalogosVORowImpl = (XxqpPdftMgrCatalogosVORowImpl)iteratorUK.next();
            String strLookupType =  xxqpPdftMgrCatalogosVORowImpl.getLookupType().toUpperCase();
            String strLookupCode = xxqpPdftMgrCatalogosVORowImpl.getLookupCode().toUpperCase();
            boolean existsRecord =set.add(strLookupType+"-"+strLookupCode); 
            if(!existsRecord){
                xxqpPdftMgrCatalogosVORowImpl.remove();
            }
        }
        iteratorUK.closeRowSetIterator();
        
        RowSetIterator iterator =  xxqpPdftMgrCatalogosVOImpl.createRowSetIterator(null);
        while(iterator.hasNext()){
            xxqpPdftMgrCatalogosVORowImpl = (XxqpPdftMgrCatalogosVORowImpl)iterator.next();
            if(0==numCatalogoID.compareTo(xxqpPdftMgrCatalogosVORowImpl.getId())){
                xxqpPdftMgrCatalogosVORowImpl.setLookupCode("Y");
                xxqpPdftMgrCatalogosVORowImpl.setDescription("Y");
                xxqpPdftMgrCatalogosVORowImpl.remove();
                this.getOADBTransaction().commit();
            }
        }
        iterator.closeRowSetIterator();
        
    }

    /**Container's getter for XxqpPdftMgrCatalogosVO1
     */
    public XxqpPdftMgrCatalogosVOImpl getXxqpPdftMgrCatalogosVO1() {
        return (XxqpPdftMgrCatalogosVOImpl)findViewObject("XxqpPdftMgrCatalogosVO1");
    }

    /**Container's getter for MgrCatalogosTmpVO1
     */
    public MgrCatalogosTmpVOImpl getMgrCatalogosTmpVO1() {
        return (MgrCatalogosTmpVOImpl)findViewObject("MgrCatalogosTmpVO1");
    }

    public void agregaRegistroTMp(String strFvCatalogoValue) {
        MgrCatalogosTmpVOImpl mgrCatalogosTmpVOImpl = getMgrCatalogosTmpVO1();
        MgrCatalogosTmpVORowImpl mgrCatalogosTmpVORowImpl = null;  
        if(null!=mgrCatalogosTmpVOImpl){
            if(!mgrCatalogosTmpVOImpl.isPreparedForExecution()){
                mgrCatalogosTmpVOImpl.executeQuery();
            }
          mgrCatalogosTmpVORowImpl = (MgrCatalogosTmpVORowImpl)mgrCatalogosTmpVOImpl.createRow();
            mgrCatalogosTmpVOImpl.insertRow(mgrCatalogosTmpVORowImpl);
        }
    }

    public void migraInformacion() {
        MgrCatalogosTmpVOImpl mgrCatalogosTmpVOImpl = getMgrCatalogosTmpVO1();
        MgrCatalogosTmpVORowImpl mgrCatalogosTmpVORowImpl = null;  
        RowSetIterator  iterator = mgrCatalogosTmpVOImpl.createRowSetIterator(null);
        while(iterator.hasNext()){
            mgrCatalogosTmpVORowImpl = (MgrCatalogosTmpVORowImpl)iterator.next();
        }
        iterator.closeRowSetIterator();
    }

    /**Container's getter for MgrCatalogosVO1
     */
    public MgrCatalogosVOImpl getMgrCatalogosVO1() {
        return (MgrCatalogosVOImpl)findViewObject("MgrCatalogosVO1");
    }

    public void initMgrCatalogosLov() {
        MgrCatalogosVOImpl mgrCatalogosVOImpl = getMgrCatalogosVO1(); 
        int count = 0;
        if(null!=mgrCatalogosVOImpl){
           mgrCatalogosVOImpl.executeQuery();
           while(mgrCatalogosVOImpl.hasNext()){
               mgrCatalogosVOImpl.next();
           }
            mgrCatalogosVOImpl.first(); 
        }
    }

    public void validaNulos(XxqpPdftMgrCatalogosVORowImpl pXxqpPdftMgrCatalogosVORowImpl) {
        System.out.println("Entra validaNulos");
        
        if(null!=pXxqpPdftMgrCatalogosVORowImpl){
        System.out.println(" pXxqpPdftMgrCatalogosVORowImpl.isDead():"+ pXxqpPdftMgrCatalogosVORowImpl.isDead());  
        if(!pXxqpPdftMgrCatalogosVORowImpl.isDead()){
        System.out.println("LookUpCode:"+pXxqpPdftMgrCatalogosVORowImpl.getLookupCode());
        System.out.println("Description:"+pXxqpPdftMgrCatalogosVORowImpl.getDescription());
        if((null==pXxqpPdftMgrCatalogosVORowImpl.getLookupCode()||"".equals(pXxqpPdftMgrCatalogosVORowImpl.getLookupCode()))
          ||(null==pXxqpPdftMgrCatalogosVORowImpl.getDescription()||"".equals(pXxqpPdftMgrCatalogosVORowImpl.getDescription()))
          ){
              pXxqpPdftMgrCatalogosVORowImpl.remove();
          }
        } /** END  if(!pXxqpPdftMgrCatalogosVORowImpl.isDead()){ **/
        } /** END if(null!=xxqpPdftMgrCatalogosVORowImpl){ **/
        
        System.out.println("Sale validaNulos");
    } /** END  public void validaNulos() { **/

    public void valoresValidos(String pStrCatalogoParam) {
        MgrCatalogosVOImpl mgrCatalogosVOImpl = getMgrCatalogosVO1(); 
        MgrCatalogosVORowImpl mgrCatalogosVORowImpl = null; 
        boolean flag = false; 
    
        if(null!=mgrCatalogosVOImpl){
        if(!mgrCatalogosVOImpl.isPreparedForExecution()){
            mgrCatalogosVOImpl.executeQuery();
        }
         RowSetIterator iterator  = mgrCatalogosVOImpl.createRowSetIterator(null); 
          while(iterator.hasNext()){
             mgrCatalogosVORowImpl = (MgrCatalogosVORowImpl)iterator.next();
             if(pStrCatalogoParam.equals(mgrCatalogosVORowImpl.getMeaning())){
              flag = true; 
              break;
             }
          }
            iterator.closeRowSetIterator();
        } /** END if(null!=mgrCatalogosVOImpl){ **/
        if(!flag){
         throw new OAException("Elegir un valor valido:"+pStrCatalogoParam,OAException.ERROR); 
        }
    }

    /**Container's getter for XxqpPdftDistribucionVO1
     */
    public XxqpPdftDistribucionVOImpl getXxqpPdftDistribucionVO1() {
        return (XxqpPdftDistribucionVOImpl)findViewObject("XxqpPdftDistribucionVO1");
    }
}
