package xxqp.oracle.apps.ar.pdft.altafitec.server;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;

import java.io.InputStream;

import java.sql.Connection;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Types;

import java.util.HashMap;
import java.util.Locale;

import java.util.Map;

import java.util.Properties;

import javax.activation.DataHandler;
import javax.activation.DataSource;

import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.mail.util.ByteArrayDataSource;

import oracle.apps.fnd.common.AppsContext;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;

import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.apps.fnd.framework.server.OADBTransactionImpl;
import oracle.apps.fnd.framework.webui.OAPageContext;

import oracle.apps.fnd.framework.webui.OAWebBeanConstants;

import oracle.apps.fnd.framework.webui.beans.OAWebBean;

import oracle.apps.fnd.framework.webui.beans.form.OAFormValueBean;
import oracle.apps.fnd.framework.webui.beans.layout.OASubTabLayoutBean;
import oracle.apps.fnd.framework.webui.beans.message.OAMessageLovInputBean;
import oracle.apps.fnd.framework.webui.beans.message.OAMessageTextInputBean;

import oracle.apps.xdo.XDOException;
import oracle.apps.xdo.delivery.DeliveryException;
import oracle.apps.xdo.delivery.DeliveryManager;
import oracle.apps.xdo.delivery.DeliveryPropertyDefinitions;
import oracle.apps.xdo.delivery.DeliveryRequest;
import oracle.apps.xdo.delivery.InvalidFactoryException;
import oracle.apps.xdo.delivery.UndefinedRequestTypeException;
import oracle.apps.xdo.oa.schema.server.TemplateHelper;

import oracle.jbo.RowSetIterator;

import oracle.jdbc.OracleCallableStatement;

import xxqp.oracle.apps.ar.pdft.altafitec.AltaFichaTecnicaUtils;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AltaFichaTecnicaAMImpl extends OAApplicationModuleImpl {

    public static String strXxqpPdftEmail;
    public static String strXxqpPdftEmailPwd;
    
    /**This is the default constructor (do not remove)
     */
    public AltaFichaTecnicaAMImpl() {
    }

    /**Sample main for debugging Business Components code using the tester.
     */
    public static void main(String[] args) {
        launchTester("xxqp.oracle.apps.ar.pdft.altafitec.server", /* package name */
      "AltaFichaTecnicaAMLocal" /* Configuration Name */);
    }

    /**Container's getter for ClientesInfoFiTecVO1
     */
    public ClientesInfoFiTecVOImpl getClientesInfoFiTecVO1() {
        return (ClientesInfoFiTecVOImpl)findViewObject("ClientesInfoFiTecVO1");
    }

    public void initClientesInfoFiTecVO(String pStrNombreDeCliente, 
                                        String pStrRFC) {
        ClientesInfoFiTecVOImpl clientesInfoFiTecVOImpl = getClientesInfoFiTecVO1(); 
        if(null!=clientesInfoFiTecVOImpl){
            clientesInfoFiTecVOImpl.filterClientesInfoFiTecVO(pStrNombreDeCliente
                                                             ,pStrRFC);
        }
    }
   
    /**Container's getter for EjecutivosVO1
     */
    public EjecutivosVOImpl getEjecutivosVO1() {
        return (EjecutivosVOImpl)findViewObject("EjecutivosVO1");
    }

    /**Container's getter for FichasTecnicasVO1
     */
    public FichasTecnicasVOImpl getFichasTecnicasVO1() {
        return (FichasTecnicasVOImpl)findViewObject("FichasTecnicasVO1");
    }
    
    public void cleanClientesInfoFiTecVO() {
        ClientesInfoFiTecVOImpl clientesInfoFiTecVOImpl = getClientesInfoFiTecVO1(); 
        if(null!=clientesInfoFiTecVOImpl){
            clientesInfoFiTecVOImpl.cleanClientesInfoFiTecVO();
        }
    }

    public void toAltaDeFichaTecnica(OAPageContext pageContext) {
     String strIsSelectedAtLeastOne = "N";
     ClientesInfoFiTecVOImpl clientesInfoFiTecVOImpl = getClientesInfoFiTecVO1(); 
     ClientesInfoFiTecVORowImpl clientesInfoFiTecVORowImpl= null; 
     if(0==clientesInfoFiTecVOImpl.getFetchedRowCount()){
      return; 
     }
     if(null!=clientesInfoFiTecVOImpl){
       RowSetIterator iterator =  clientesInfoFiTecVOImpl.createRowSetIterator(null);
       while(iterator.hasNext()){
           clientesInfoFiTecVORowImpl = (ClientesInfoFiTecVORowImpl)iterator.next();
           if("Y".equals(clientesInfoFiTecVORowImpl.getSeleccione())){
               strIsSelectedAtLeastOne = "Y";
             //throw new OAException("Se Selecciono:"+clientesInfoFiTecVORowImpl.getKnownAs(),OAException.ERROR); 
              com.sun.java.util.collections.HashMap parameters = new com.sun.java.util.collections.HashMap();
               parameters.put("pPartyId",clientesInfoFiTecVORowImpl.getPartyId().toString());
               pageContext.setForwardURL("OA.jsp?page=/xxqp/oracle/apps/ar/pdft/altafitec/webui/AltaFichaTecnicaPG" /*url*/
                                         ,null /*functionName*/
                                         ,OAWebBeanConstants.KEEP_MENU_CONTEXT /*menuContextAction*/
                                         ,null /*menuName*/
                                         ,parameters /*parameters*/
                                         ,false /*retainAM*/
                                         ,OAWebBeanConstants.ADD_BREAD_CRUMB_NO /*addBreadCrumb*/
                                         ,OAException.ERROR /*messagingLevel*/
                                         );
           }
       } /** END while(iterator.hasNext()){ **/
        iterator.closeRowSetIterator();
       
     } /** END if(null!=clientesInfoFiTecVOImpl){ **/ 
     
     if("N".equals(strIsSelectedAtLeastOne)){
         throw new OAException("Seleccionar un cliente.",OAException.ERROR); 
      }
    
    } /** END  public void toAltaDeFichaTecnica(OAPageContext pageContext) { **/

    public void fillCampos(OAPageContext pageContext
                         , OAWebBean webBean) {
      
      OAMessageTextInputBean FechaActualBean = (OAMessageTextInputBean)webBean.findChildRecursive("FechaActual");                 
      /** OAMessageTextInputBean EjecutivoBean = (OAMessageTextInputBean)webBean.findChildRecursive("Ejecutivo");  NA 17072018 **/ 
      OAMessageTextInputBean NombreDelClienteBean = (OAMessageTextInputBean)webBean.findChildRecursive("NombreDelCliente");  
      OAMessageLovInputBean NombreDelClienteLovBean = (OAMessageLovInputBean)webBean.findChildRecursive("NombreDelClienteLov");  
      OAFormValueBean PartyIdBean = (OAFormValueBean)webBean.findChildRecursive("PartyId");
           
     OADBTransaction  oADBTransaction = this.getOADBTransaction();

     Connection connection =   oADBTransaction.getJdbcConnection();
        String strPrepStmt = " select   p.party_id " +
                             "         ,to_char(sysdate,'DD-MON-YYYY HH24:MI:SS') fecha_actual\n" + 
                             "         ,(select  fu.user_name||' - '||fu.description \n" + 
                             "             from fnd_user fu\n" + 
                             "           where user_name = 'CAP CONS_ASTI'\n" + 
                             "              and user_id = fnd_profile.value('USER_ID')\n" + 
                             "           ) ejecutivo\n" + 
                             "         ,p.known_as nombre_del_cliente\n" + 
                             "   from XXQP_PDFT_CLIENTES_INFO_V p\n" + 
                             "  where p.party_id = ? ";

            String strPartyId = pageContext.getParameter("pPartyId");/*"6041";*/
            if(null==strPartyId){
             throw new OAException("No se encontro valor del parametro pPartyId.",OAException.ERROR); 
            }
            Double douPartyId = new Double(strPartyId);
            PreparedStatement prepStmt = null;
            ResultSet resultSet = null;
            try
            {
              prepStmt = connection.prepareStatement(strPrepStmt,ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
              prepStmt.setDouble(1,douPartyId);
              resultSet = prepStmt.executeQuery();
              while(resultSet.next()){
                
                
                if(null!=FechaActualBean){
                    FechaActualBean.setValue(pageContext,resultSet.getString("fecha_actual"));
                }
               /** if(null!=EjecutivoBean){
                    EjecutivoBean.setValue(pageContext,resultSet.getString("ejecutivo"));
                } NA 17072018 **/
                if(null!=NombreDelClienteBean){
                    NombreDelClienteBean.setValue(pageContext,resultSet.getString("nombre_del_cliente"));
                }
                if(null!=NombreDelClienteLovBean){
                    NombreDelClienteLovBean.setValue(pageContext,resultSet.getString("nombre_del_cliente"));
                }
                if(null!=PartyIdBean){
                    PartyIdBean.setValue(pageContext,resultSet.getString("party_id"));
                }
                
              }
              
            } catch (SQLException sqle)
            {
             throw new OAException("EXCEPTION metodo fillCampos:"+sqle.getErrorCode()+" , "+sqle.getMessage(),OAException.ERROR);
            }
           closeResultSet(resultSet);
           closePreparedStatement(prepStmt);
           
       }  
            
        /**
           * Metodo que cierra un Result Set
           * @param pResultSet
           */
          private void closeResultSet(ResultSet pResultSet)
          {
            if(null!=pResultSet){
              try
              {
                pResultSet.close();
              } catch (SQLException sqle)
              {
               throw new OAException(sqle.getErrorCode()+ " , "+sqle.getMessage(),OAException.ERROR);
              }
            }
          }

          /**
           * Metodo que cierra un Prepared Statement
           * @param pPrepStmt
           */
          private void closePreparedStatement(PreparedStatement pPrepStmt)
          {
             if(null!=pPrepStmt){
              try
              {
                pPrepStmt.close();
              } catch (SQLException sqle)
              {
                 throw new OAException(sqle.getErrorCode()+ " , "+sqle.getMessage(),OAException.ERROR);
              }
            }
          }

   

    public void initFichasTecnicasVO(String pStrNoFichaTecnicaValue
                                    ,String pStrStatusValue
                                    ,java.sql.Timestamp pSqlTimestampFechaInicialOperacionValue
                                    ,java.sql.Timestamp pSqlTimestampFechaCreacionValue
                                    ,String pStrFvEjecutivoCode
                                    ,String pStrNombreDelClienteValue
                                    ,String pStrUnidadDeNegocio
                                    ,String pStrEmpresaQueFactura
                                    ,String pStrCicloFacturacion
                                    ) {
       oracle.jbo.domain.Number numNoFichaTecnica = null;
       oracle.jbo.domain.Date fechaInicialOperacion = null; 
       oracle.jbo.domain.Date fechaCreacion = null; 
       
       
        try {
            if(null!=pStrNoFichaTecnicaValue)
            numNoFichaTecnica = new oracle.jbo.domain.Number(pStrNoFichaTecnicaValue);
        } catch (SQLException sqle) {
           throw new OAException("SQLException metodo initFichasTecnicasVO parametro pStrNoFichaTecnicaValue:"+sqle.getMessage(),OAException.ERROR); 
        }
        
        if(null!=pSqlTimestampFechaInicialOperacionValue){
        fechaInicialOperacion = new oracle.jbo.domain.Date(pSqlTimestampFechaInicialOperacionValue);
        }
        if(null!=pSqlTimestampFechaCreacionValue){
        fechaCreacion = new oracle.jbo.domain.Date(pSqlTimestampFechaCreacionValue);
        }
        
        FichasTecnicasVOImpl fichasTecnicasVOImpl = getFichasTecnicasVO1(); 
        if(null!=fichasTecnicasVOImpl){
            fichasTecnicasVOImpl.initByFilters(numNoFichaTecnica
                                              ,pStrStatusValue
                                              ,fechaInicialOperacion
                                              ,fechaCreacion
                                              ,pStrFvEjecutivoCode
                                              ,pStrNombreDelClienteValue
                                              ,pStrUnidadDeNegocio
                                              ,pStrEmpresaQueFactura
                                              ,pStrCicloFacturacion
                                              ); 
        }  /** END if(null!=fichasTecnicasVOImpl){ **/

   }

    public void consultaFichaTecnica(OAPageContext pageContext) {
        FichasTecnicasVOImpl fichasTecnicasVOImpl = getFichasTecnicasVO1();
        FichasTecnicasVORowImpl fichasTecnicasVORowImpl = null; 
        int countIsSelected = 0;
        if(null!=fichasTecnicasVOImpl){
        if(0==fichasTecnicasVOImpl.getFetchedRowCount()){
         return;
        }
          RowSetIterator iteratorFichasTecnicas =  fichasTecnicasVOImpl.createRowSetIterator(null);
          while(iteratorFichasTecnicas.hasNext()){
              fichasTecnicasVORowImpl = (FichasTecnicasVORowImpl)iteratorFichasTecnicas.next();
              if("Y".equals(fichasTecnicasVORowImpl.getIsSelected())){
                  countIsSelected = countIsSelected+1;
                  System.out.println("fichasTecnicasVORowImpl.getOrigin():"+fichasTecnicasVORowImpl.getOrigin());
               if("MYP".equals(fichasTecnicasVORowImpl.getOrigin())){
                   com.sun.java.util.collections.HashMap parameters = new com.sun.java.util.collections.HashMap();
                   parameters.put("pMyPHeaderId",fichasTecnicasVORowImpl.getId().toString() );
                   pageContext.setForwardURL("OA.jsp?page=/xxqp/oracle/apps/ar/pdft/altafitec/masiplat/webui/MasivoYPlatinumReOnPG&"+OASubTabLayoutBean.OA_SELECTED_SUBTAB_IDX+"=0" /*url*/
                                             ,null /*functionName*/
                                             ,OAWebBeanConstants.KEEP_MENU_CONTEXT /*menuContextAction*/
                                             ,null /*menuName*/
                                             ,parameters /*parameters*/
                                             ,false /*retainAM*/
                                             ,OAWebBeanConstants.ADD_BREAD_CRUMB_NO /*addBreadCrumb*/
                                             ,OAException.ERROR /*messagingLevel*/
                                             );     
               }else if("BPO".equals(fichasTecnicasVORowImpl.getOrigin())){
                   com.sun.java.util.collections.HashMap parameters = new com.sun.java.util.collections.HashMap();
                   parameters.put("pBpoHeaderId",fichasTecnicasVORowImpl.getId().toString() );
                   pageContext.setForwardURL("OA.jsp?page=/xxqp/oracle/apps/ar/pdft/altafitec/bpo/webui/BpoReOnPG&"+OASubTabLayoutBean.OA_SELECTED_SUBTAB_IDX+"=0" /*url*/
                                             ,null /*functionName*/
                                             ,OAWebBeanConstants.KEEP_MENU_CONTEXT /*menuContextAction*/
                                             ,null /*menuName*/
                                             ,parameters /*parameters*/
                                             ,false /*retainAM*/
                                             ,OAWebBeanConstants.ADD_BREAD_CRUMB_NO /*addBreadCrumb*/
                                             ,OAException.ERROR /*messagingLevel*/
                                             );     
               }else if("QP_LABS".equals(fichasTecnicasVORowImpl.getOrigin())){
                   com.sun.java.util.collections.HashMap parameters = new com.sun.java.util.collections.HashMap();
                   parameters.put("pQplabsHeaderId",fichasTecnicasVORowImpl.getId().toString() );
                   pageContext.setForwardURL("OA.jsp?page=/xxqp/oracle/apps/ar/pdft/altafitec/qplabs/webui/QpLabsReOnPG" /*url*/
                                             ,null /*functionName*/
                                             ,OAWebBeanConstants.KEEP_MENU_CONTEXT /*menuContextAction*/
                                             ,null /*menuName*/
                                             ,parameters /*parameters*/
                                             ,false /*retainAM*/
                                             ,OAWebBeanConstants.ADD_BREAD_CRUMB_NO /*addBreadCrumb*/
                                             ,OAException.ERROR /*messagingLevel*/
                                             );     
               }
              } /** END  if("Y".equals(fichasTecnicasVORowImpl.getIsSelected())){ **/
          } /** END while(fichasTecnicasVOImpl.hasNext()){ **/
          if(0==countIsSelected){
          throw new OAException("Seleccionar al menos una linea.",OAException.ERROR); 
          }
        } /** END if(null!=fichasTecnicasVOImpl){ **/
    }

    public String generaPdftReporte(String pStrReportePorValue, 
                                  String pStrClienteDesdeText, 
                                  String pStrClienteHastaText,
                                  oracle.jbo.domain.Date pDateFechaDesde,
                                  oracle.jbo.domain.Date pDateFechaHasta,
                                  oracle.jbo.domain.Number pNumFichaTecnicaDesde,
                                  oracle.jbo.domain.Number pNumFichaTecnicaHasta, 
                                  String pStrProductoDesdeText, 
                                  String pStrProductoHastaText, 
                                  String pStrCicloFacturacionDesdeValue, 
                                  String pStrCicloFacturacionHastaValue, 
                                  String pStrEstatusDesdeValue, 
                                  String pStrEstatusHastaValue, 
                                  String pStrRazonSocialDesdeText, 
                                  String pStrRazonSocialHastaText
                                  ) {
      String retval = null; 
      String strErrmsg = null; 
      String strErrcod = null; 
      
      String strCallableStmt = " BEGIN " + 
                               " APPS.XXQP_PDFT_MYP_PKG.OBTIENE_REPORTES ( PSO_ERRMSG            => :1 " + 
                               "                                         , PSO_ERRCOD            => :2 " + 
                               "                                         , PSI_TIPO_REPORTE      => :3 " + 
                               "                                         , PSI_CLIENTE_DESDE     => :4 " + 
                               "                                         , PSI_CLIENTE_HASTA     => :5 " + 
                               "                                         , PDI_FECHA_DESDE       => :6 " + 
                               "                                         , PDI_FECHA_HASTA       => :7 " + 
                               "                                         , PNI_FICHA_TECNICA_DESDE       => :8 " + 
                               "                                         , PNI_FICHA_TECNICA_HASTA       => :9 " + 
                               "                                         , PSI_PRODUCTO_DESDE       => :10 " + 
                               "                                         , PSI_PRODUCTO_HASTA       => :11 " + 
                               "                                         , PSI_FRE_FACT_DESDE       => :12 " + 
                               "                                         , PSI_FRE_FACT_HASTA       => :13 " + 
                               "                                         , PSI_STATUS_DESDE       => :14 " + 
                               "                                         , PSI_STATUS_HASTA       => :15 " + 
                               "                                         , PSI_RAZ_SOC_DESDE       => :16 " + 
                               "                                         , PSI_RAZ_SOC_HASTA       => :17 " + 
                               "                                         , PCO_INFO              => :18 " + 
                               "                                          ); " + 
                               " END; ";
      OADBTransaction oadbtransaction = (OADBTransaction)getTransaction();
      OracleCallableStatement oraclecallablestatement =  (OracleCallableStatement)oadbtransaction.createCallableStatement(strCallableStmt, 1);
        try {
            oraclecallablestatement.registerOutParameter(1,Types.VARCHAR);
            oraclecallablestatement.registerOutParameter(2,Types.VARCHAR);
            oraclecallablestatement.setString(3,pStrReportePorValue);
            oraclecallablestatement.setString(4,pStrClienteDesdeText);
            oraclecallablestatement.setString(5,pStrClienteHastaText);
            if(null!=pDateFechaDesde){
            oraclecallablestatement.setDate(6,pDateFechaDesde.dateValue());
            }else{
                oraclecallablestatement.setDate(6,null);
            }
            if(null!=pDateFechaHasta){
            oraclecallablestatement.setDate(7,pDateFechaHasta.dateValue());
            }else{
                oraclecallablestatement.setDate(7,null);
            }
            if(null!=pNumFichaTecnicaDesde){
                oraclecallablestatement.setDouble(8,pNumFichaTecnicaDesde.doubleValue());
            }else{
                oraclecallablestatement.setObject(8,null);
            }
            if(null!=pNumFichaTecnicaHasta){
                oraclecallablestatement.setDouble(9,pNumFichaTecnicaHasta.doubleValue());
            }else{
                oraclecallablestatement.setObject(9,null);
            }
            oraclecallablestatement.setString(10,pStrProductoDesdeText);
            oraclecallablestatement.setString(11,pStrProductoHastaText);
            oraclecallablestatement.setString(12,pStrCicloFacturacionDesdeValue);
            oraclecallablestatement.setString(13,pStrCicloFacturacionHastaValue);
            oraclecallablestatement.setString(14,pStrEstatusDesdeValue);
            oraclecallablestatement.setString(15,pStrEstatusHastaValue);
            oraclecallablestatement.setString(16,pStrRazonSocialDesdeText);
            oraclecallablestatement.setString(17,pStrRazonSocialHastaText);
            oraclecallablestatement.registerOutParameter(18,Types.CLOB);
            oraclecallablestatement.execute();
            strErrmsg = oraclecallablestatement.getString(1); 
            strErrcod = oraclecallablestatement.getString(2); 
            System.out.println("strErrmsg:"+strErrmsg);
            System.out.println("strErrcod:"+strErrcod);
            if(strErrmsg!=null){
             return strErrmsg; 
            }
            java.sql.Clob retvalClob = oraclecallablestatement.getClob(18);
            java.io.Reader reader =retvalClob.getCharacterStream();
            java.io.BufferedReader bufferReader = new java.io.BufferedReader(reader);
            String retvalxml = "";
            String line = null; 
            while((line = bufferReader.readLine())!=null){
                retvalxml = retvalxml+line;
            }
            System.out.println("retvalxml:"+retvalxml);
            retval = retvalxml;
            bufferReader.close();
            reader.close();
                        
        } catch (SQLException e) {
            System.out.println("SQLException en el metodo generaPdftReporte:"+e.getErrorCode()+", "+e.getMessage());
            throw new OAException("SQLException en el metodo generaPdftReporte:"+e.getErrorCode()+", "+e.getMessage(),OAException.ERROR); 
        }catch (IOException ioe) {
            System.out.println("IOException en el metodo generaPdftReporte"+ioe.getMessage());
            throw new OAException("IOException en el metodo generaPdftReporte:"+ioe.getMessage(),OAException.ERROR);
        }
        
      return retval; 
    }

    public void modificaFichaTecnica(OAPageContext pageContext) {
        FichasTecnicasVOImpl fichasTecnicasVOImpl = getFichasTecnicasVO1();
        FichasTecnicasVORowImpl fichasTecnicasVORowImpl = null; 
        int countIsSelected = 0;
        if(null!=fichasTecnicasVOImpl){
        if(0==fichasTecnicasVOImpl.getFetchedRowCount()){
         return;
        }
          RowSetIterator iteratorFichasTecnicas =  fichasTecnicasVOImpl.createRowSetIterator(null);
          while(iteratorFichasTecnicas.hasNext()){
              fichasTecnicasVORowImpl = (FichasTecnicasVORowImpl)iteratorFichasTecnicas.next();
              if("Y".equals(fichasTecnicasVORowImpl.getIsSelected())){
                  countIsSelected = countIsSelected+1;
                  System.out.println("fichasTecnicasVORowImpl.getOrigin():"+fichasTecnicasVORowImpl.getOrigin());
                  if(null!=fichasTecnicasVORowImpl.getStatus()){
                    if("CANCELADA".equals(fichasTecnicasVORowImpl.getStatus())
                      ||"ABIERTA".equals(fichasTecnicasVORowImpl.getStatus())
                      ||"CERRADA".equals(fichasTecnicasVORowImpl.getStatus())){
                       throw new OAException("No se puede modificar una ficha tecnica con este status.",OAException.ERROR);
                    }
                  }
                  
               if("MYP".equals(fichasTecnicasVORowImpl.getOrigin())){
                   com.sun.java.util.collections.HashMap parameters = new com.sun.java.util.collections.HashMap();
                   parameters.put("pMyPHeaderId",fichasTecnicasVORowImpl.getId().toString() );
                   pageContext.setForwardURL("OA.jsp?page=/xxqp/oracle/apps/ar/pdft/altafitec/masiplat/webui/MasivoYPlatinumUpdPG&"+OASubTabLayoutBean.OA_SELECTED_SUBTAB_IDX+"=0" /*url*/
                                             ,null /*functionName*/
                                             ,OAWebBeanConstants.KEEP_MENU_CONTEXT /*menuContextAction*/
                                             ,null /*menuName*/
                                             ,parameters /*parameters*/
                                             ,false /*retainAM*/
                                             ,OAWebBeanConstants.ADD_BREAD_CRUMB_NO /*addBreadCrumb*/
                                             ,OAException.ERROR /*messagingLevel*/
                                             );     
               }else if("BPO".equals(fichasTecnicasVORowImpl.getOrigin())){
                   com.sun.java.util.collections.HashMap parameters = new com.sun.java.util.collections.HashMap();
                   parameters.put("pBpoHeaderId",fichasTecnicasVORowImpl.getId().toString() );
                   pageContext.setForwardURL("OA.jsp?page=/xxqp/oracle/apps/ar/pdft/altafitec/bpo/webui/BpoUpdPG&"+OASubTabLayoutBean.OA_SELECTED_SUBTAB_IDX+"=0" /*url*/
                                             ,null /*functionName*/
                                             ,OAWebBeanConstants.KEEP_MENU_CONTEXT /*menuContextAction*/
                                             ,null /*menuName*/
                                             ,parameters /*parameters*/
                                             ,false /*retainAM*/
                                             ,OAWebBeanConstants.ADD_BREAD_CRUMB_NO /*addBreadCrumb*/
                                             ,OAException.ERROR /*messagingLevel*/
                                             );     
               }else if("QP_LABS".equals(fichasTecnicasVORowImpl.getOrigin())){
                   com.sun.java.util.collections.HashMap parameters = new com.sun.java.util.collections.HashMap();
                   parameters.put("pQplabsHeaderId",fichasTecnicasVORowImpl.getId().toString() );
                   pageContext.setForwardURL("OA.jsp?page=/xxqp/oracle/apps/ar/pdft/altafitec/qplabs/webui/QpLabsUpdPG" /*url*/
                                             ,null /*functionName*/
                                             ,OAWebBeanConstants.KEEP_MENU_CONTEXT /*menuContextAction*/
                                             ,null /*menuName*/
                                             ,parameters /*parameters*/
                                             ,false /*retainAM*/
                                             ,OAWebBeanConstants.ADD_BREAD_CRUMB_NO /*addBreadCrumb*/
                                             ,OAException.ERROR /*messagingLevel*/
                                             );     
               }
              } /** END  if("Y".equals(fichasTecnicasVORowImpl.getIsSelected())){ **/
          } /** END while(fichasTecnicasVOImpl.hasNext()){ **/
           iteratorFichasTecnicas.closeRowSetIterator();
          if(0==countIsSelected){
          throw new OAException("Seleccionar al menos una linea.",OAException.ERROR); 
          }
        } /** END if(null!=fichasTecnicasVOImpl){ **/
    }

    public void cancelarFichaTecnica(OAPageContext pageContext) {
        FichasTecnicasVOImpl fichasTecnicasVOImpl = getFichasTecnicasVO1();
        FichasTecnicasVORowImpl fichasTecnicasVORowImpl = null; 
        int countIsSelected = 0;
        if(null!=fichasTecnicasVOImpl){
        if(0==fichasTecnicasVOImpl.getFetchedRowCount()){
         return;
        }
        
        java.sql.Connection connection =this.getOADBTransaction().getJdbcConnection();
        java.sql.Statement statement = null;

            try {
                statement = connection.createStatement();
                
                RowSetIterator iteratorFichasTecnicas =  fichasTecnicasVOImpl.createRowSetIterator(null);
                while(iteratorFichasTecnicas.hasNext()){
                  fichasTecnicasVORowImpl = (FichasTecnicasVORowImpl)iteratorFichasTecnicas.next();
                  if("Y".equals(fichasTecnicasVORowImpl.getIsSelected())){
                      countIsSelected = countIsSelected+1;
                      System.out.println("fichasTecnicasVORowImpl.getOrigin():"+fichasTecnicasVORowImpl.getOrigin());
                      if(null!=fichasTecnicasVORowImpl.getStatus()){
                        if("CANCELADA".equals(fichasTecnicasVORowImpl.getStatus())
                          ||"CERRADA".equals(fichasTecnicasVORowImpl.getStatus())){
                           throw new OAException("No se puede Cancelar una ficha tecnica con este status.",OAException.ERROR);
                        }
                      }
                    oracle.jbo.domain.Number numNumeroFt =  fichasTecnicasVORowImpl.getNumeroFt();
                   if("MYP".equals(fichasTecnicasVORowImpl.getOrigin())){
                        
                      /** String strStatement = "update XXQP_PDFT_MYP_HEADER set status = 'CANCELADA' where numero_ft = "+numNumeroFt; 
                       int countUpdate = statement.executeUpdate(strStatement); 
                       System.out.println("countUpdate:"+countUpdate);
                       statement.close();
                       this.getOADBTransaction().commit(); **/
                       com.sun.java.util.collections.HashMap parameters = new com.sun.java.util.collections.HashMap();
                       parameters.put("pMyPHeaderId",fichasTecnicasVORowImpl.getId().toString() );
                       pageContext.setForwardURL("OA.jsp?page=/xxqp/oracle/apps/ar/pdft/altafitec/masiplat/webui/MasivoYPlatinumCancelPG&"+OASubTabLayoutBean.OA_SELECTED_SUBTAB_IDX+"=0" /*url*/
                                                 ,null /*functionName*/
                                                 ,OAWebBeanConstants.KEEP_MENU_CONTEXT /*menuContextAction*/
                                                 ,null /*menuName*/
                                                 ,parameters /*parameters*/
                                                 ,false /*retainAM*/
                                                 ,OAWebBeanConstants.ADD_BREAD_CRUMB_NO /*addBreadCrumb*/
                                                 ,OAException.ERROR /*messagingLevel*/
                                                 );   
                                                 
                   }else if("BPO".equals(fichasTecnicasVORowImpl.getOrigin())){
                      /** String strStatement = "update XXQP_PDFT_BPO_HEADER set status = 'CANCELADA' where numero_ft = "+numNumeroFt; 
                       int countUpdate = statement.executeUpdate(strStatement); 
                       System.out.println("countUpdate:"+countUpdate);
                       statement.close();
                       this.getOADBTransaction().commit(); **/
                       com.sun.java.util.collections.HashMap parameters = new com.sun.java.util.collections.HashMap();
                       parameters.put("pBpoHeaderId",fichasTecnicasVORowImpl.getId().toString() );
                       pageContext.setForwardURL("OA.jsp?page=/xxqp/oracle/apps/ar/pdft/altafitec/bpo/webui/BpoCancelPG&"+OASubTabLayoutBean.OA_SELECTED_SUBTAB_IDX+"=0" /*url*/
                                                 ,null /*functionName*/
                                                 ,OAWebBeanConstants.KEEP_MENU_CONTEXT /*menuContextAction*/
                                                 ,null /*menuName*/
                                                 ,parameters /*parameters*/
                                                 ,false /*retainAM*/
                                                 ,OAWebBeanConstants.ADD_BREAD_CRUMB_NO /*addBreadCrumb*/
                                                 ,OAException.ERROR /*messagingLevel*/
                                                 );     
                   }else if("QP_LABS".equals(fichasTecnicasVORowImpl.getOrigin())){
                      /** String strStatement = "update XXQP_PDFT_QPLABS_HEADER set status = 'CANCELADA' where numero_ft = "+numNumeroFt; 
                       int countUpdate = statement.executeUpdate(strStatement); 
                       System.out.println("countUpdate:"+countUpdate);
                       statement.close();
                       this.getOADBTransaction().commit(); **/
                       com.sun.java.util.collections.HashMap parameters = new com.sun.java.util.collections.HashMap();
                       parameters.put("pQplabsHeaderId",fichasTecnicasVORowImpl.getId().toString() );
                       pageContext.setForwardURL("OA.jsp?page=/xxqp/oracle/apps/ar/pdft/altafitec/qplabs/webui/QpLabsCancelPG" /*url*/
                                                 ,null /*functionName*/
                                                 ,OAWebBeanConstants.KEEP_MENU_CONTEXT /*menuContextAction*/
                                                 ,null /*menuName*/
                                                 ,parameters /*parameters*/
                                                 ,false /*retainAM*/
                                                 ,OAWebBeanConstants.ADD_BREAD_CRUMB_NO /*addBreadCrumb*/
                                                 ,OAException.ERROR /*messagingLevel*/
                                                 );     
                   }
                  } /** END  if("Y".equals(fichasTecnicasVORowImpl.getIsSelected())){ **/
                } /** END while(fichasTecnicasVOImpl.hasNext()){ **/
                iteratorFichasTecnicas.closeRowSetIterator();
                
            } catch (SQLException sqle) {
               throw new OAException("SQLException:"+sqle.getMessage(),OAException.ERROR); 
            }
           
           
          if(0==countIsSelected){
          throw new OAException("Seleccionar al menos una linea.",OAException.ERROR); 
          }
        } /** END if(null!=fichasTecnicasVOImpl){ **/
    }

    public void copiarFichaTecnica(OAPageContext pageContext
                                  ,String pUserPdftId
                                  ) {
        FichasTecnicasVOImpl fichasTecnicasVOImpl = getFichasTecnicasVO1();
        FichasTecnicasVORowImpl fichasTecnicasVORowImpl = null; 
        int countIsSelected = 0;
        if(null!=fichasTecnicasVOImpl){
        if(0==fichasTecnicasVOImpl.getFetchedRowCount()){
         return;
        }
          RowSetIterator iteratorFichasTecnicas =  fichasTecnicasVOImpl.createRowSetIterator(null);
          while(iteratorFichasTecnicas.hasNext()){
              fichasTecnicasVORowImpl = (FichasTecnicasVORowImpl)iteratorFichasTecnicas.next();
              if("Y".equals(fichasTecnicasVORowImpl.getIsSelected())){
                  countIsSelected = countIsSelected+1;
                  System.out.println("fichasTecnicasVORowImpl.getOrigin():"+fichasTecnicasVORowImpl.getOrigin());
               if("MYP".equals(fichasTecnicasVORowImpl.getOrigin())){
                   com.sun.java.util.collections.HashMap parameters = new com.sun.java.util.collections.HashMap();
                   parameters.put("pMyPHeaderId",fichasTecnicasVORowImpl.getId().toString() );
                   parameters.put("pMyPCopiar","Y");
                   parameters.put("pUserPdftId",pUserPdftId);
                   pageContext.setForwardURL("OA.jsp?page=/xxqp/oracle/apps/ar/pdft/altafitec/masiplat/webui/MasivoYPlatinumReOnPG&"+OASubTabLayoutBean.OA_SELECTED_SUBTAB_IDX+"=0" /*url*/
                                             ,null /*functionName*/
                                             ,OAWebBeanConstants.KEEP_MENU_CONTEXT /*menuContextAction*/
                                             ,null /*menuName*/
                                             ,parameters /*parameters*/
                                             ,false /*retainAM*/
                                             ,OAWebBeanConstants.ADD_BREAD_CRUMB_NO /*addBreadCrumb*/
                                             ,OAException.ERROR /*messagingLevel*/
                                             );     
               }else if("BPO".equals(fichasTecnicasVORowImpl.getOrigin())){
                   com.sun.java.util.collections.HashMap parameters = new com.sun.java.util.collections.HashMap();
                   parameters.put("pBpoHeaderId",fichasTecnicasVORowImpl.getId().toString() );
                   parameters.put("pBpoCopiar","Y");
                   parameters.put("pUserPdftId",pUserPdftId);
                   pageContext.setForwardURL("OA.jsp?page=/xxqp/oracle/apps/ar/pdft/altafitec/bpo/webui/BpoReOnPG&"+OASubTabLayoutBean.OA_SELECTED_SUBTAB_IDX+"=0" /*url*/
                                             ,null /*functionName*/
                                             ,OAWebBeanConstants.KEEP_MENU_CONTEXT /*menuContextAction*/
                                             ,null /*menuName*/
                                             ,parameters /*parameters*/
                                             ,false /*retainAM*/
                                             ,OAWebBeanConstants.ADD_BREAD_CRUMB_NO /*addBreadCrumb*/
                                             ,OAException.ERROR /*messagingLevel*/
                                             );     
               }else if("QP_LABS".equals(fichasTecnicasVORowImpl.getOrigin())){
                   com.sun.java.util.collections.HashMap parameters = new com.sun.java.util.collections.HashMap();
                   parameters.put("pQplabsHeaderId",fichasTecnicasVORowImpl.getId().toString() );
                   parameters.put("pQplabsCopiar","Y");
                   parameters.put("pUserPdftId",pUserPdftId);
                   pageContext.setForwardURL("OA.jsp?page=/xxqp/oracle/apps/ar/pdft/altafitec/qplabs/webui/QpLabsReOnPG" /*url*/
                                             ,null /*functionName*/
                                             ,OAWebBeanConstants.KEEP_MENU_CONTEXT /*menuContextAction*/
                                             ,null /*menuName*/
                                             ,parameters /*parameters*/
                                             ,false /*retainAM*/
                                             ,OAWebBeanConstants.ADD_BREAD_CRUMB_NO /*addBreadCrumb*/
                                             ,OAException.ERROR /*messagingLevel*/
                                             );     
               }
              } /** END  if("Y".equals(fichasTecnicasVORowImpl.getIsSelected())){ **/
          } /** END while(fichasTecnicasVOImpl.hasNext()){ **/
           iteratorFichasTecnicas.closeRowSetIterator();
          if(0==countIsSelected){
          throw new OAException("Seleccionar al menos una linea.",OAException.ERROR); 
          }
        } /** END if(null!=fichasTecnicasVOImpl){ **/
        
    }

    public void enviarFichaTecnica(OAPageContext pageContext,OAWebBean webBean) {
        OAApplicationModuleImpl oAApplicationModuleImpl = (OAApplicationModuleImpl)pageContext.getApplicationModule(webBean);
        
        FichasTecnicasVOImpl fichasTecnicasVOImpl = getFichasTecnicasVO1();
        FichasTecnicasVORowImpl fichasTecnicasVORowImpl = null; 
        int countIsSelected = 0;
        if(null!=fichasTecnicasVOImpl){
        if(0==fichasTecnicasVOImpl.getFetchedRowCount()){
         return;
        }
          RowSetIterator iteratorFichasTecnicas =  fichasTecnicasVOImpl.createRowSetIterator(null);
          while(iteratorFichasTecnicas.hasNext()){
              fichasTecnicasVORowImpl = (FichasTecnicasVORowImpl)iteratorFichasTecnicas.next();
              if("Y".equals(fichasTecnicasVORowImpl.getIsSelected())){
                  countIsSelected = countIsSelected+1;
                  System.out.println("fichasTecnicasVORowImpl.getOrigin():"+fichasTecnicasVORowImpl.getOrigin());
               if("MYP".equals(fichasTecnicasVORowImpl.getOrigin())){
                  oracle.jbo.domain.Number numMypHeaderId = fichasTecnicasVORowImpl.getId();
                  String strMypGetInfo = AltaFichaTecnicaUtils.executeMypGetInfo(oAApplicationModuleImpl,numMypHeaderId);
                  try {
                      byte[] aByte = strMypGetInfo.getBytes();
                      ByteArrayInputStream inputStream = new ByteArrayInputStream(aByte);
                      ByteArrayOutputStream pdfFile = new ByteArrayOutputStream();
                      AppsContext appsContext = ((OADBTransactionImpl)this.getOADBTransaction()).getAppsContext();
                      Locale locale = ((OADBTransactionImpl)this.getOADBTransaction()).getUserLocale();
                      TemplateHelper.processTemplate(appsContext, 
                                                     AltaFichaTecnicaUtils.strShortApplication ,//XxGQRecibosConstants.XXGQ_APP_SHORT_CUSTOM, 
                                                     "XXQP_PDFT_MYP", 
                                                     locale.getLanguage(), 
                                                     locale.getCountry(), 
                                                     inputStream, 
                                                     TemplateHelper.OUTPUT_TYPE_PDF, 
                                                      null, 
                                                     pdfFile);
                      if(null!=inputStream){
                      inputStream.close();
                      }
                      
                      byte[] a2Byte =pdfFile.toByteArray(); 
                      InputStream inputStream2 = new ByteArrayInputStream(a2Byte);
                      
                      String strCorreos = enviaCorreos(inputStream2,"AltaFichaTecnicaMyP"); 
                      System.out.println("strCorreos:"+strCorreos);
                      
                      if(null!=pdfFile){
                          pdfFile.close();
                      }
                      
                      if(null!=inputStream2){
                          inputStream2.close();
                      }
                      
                     return;
                     
                  } catch (IOException e) {
                     throw new OAException("IOException al obtener el ServletOutputStream.",OAException.ERROR); 
                  } catch (SQLException e) {
                      throw new OAException("SQLException al obtener el DataTemplate.",OAException.ERROR);
                  } catch (XDOException e) {
                      throw new OAException("XDOException al obtener el DataTemplate.",OAException.ERROR);
                  }
                  
              }else if("BPO".equals(fichasTecnicasVORowImpl.getOrigin())){
                  oracle.jbo.domain.Number numBpoHeaderId = fichasTecnicasVORowImpl.getId();
                  String strBpoGetInfo = AltaFichaTecnicaUtils.executeBpoGetInfo(oAApplicationModuleImpl,numBpoHeaderId);
                  try {
                      byte[] aByte = strBpoGetInfo.getBytes();
                      ByteArrayInputStream inputStream = new ByteArrayInputStream(aByte);
                      ByteArrayOutputStream pdfFile = new ByteArrayOutputStream();
                      AppsContext appsContext = ((OADBTransactionImpl)this.getOADBTransaction()).getAppsContext();
                      Locale locale = ((OADBTransactionImpl)this.getOADBTransaction()).getUserLocale();
                      TemplateHelper.processTemplate(appsContext, 
                                                     AltaFichaTecnicaUtils.strShortApplication ,//XxGQRecibosConstants.XXGQ_APP_SHORT_CUSTOM, 
                                                     "XXQP_PDFT_BPO", 
                                                     locale.getLanguage(), 
                                                     locale.getCountry(), 
                                                     inputStream, 
                                                     TemplateHelper.OUTPUT_TYPE_PDF, 
                                                      null, 
                                                     pdfFile);
                      if(null!=inputStream){
                      inputStream.close();
                      }
                      
                      byte[] a2Byte =pdfFile.toByteArray(); 
                      InputStream inputStream2 = new ByteArrayInputStream(a2Byte);
                      
                      String strCorreos = enviaCorreos(inputStream2,"AltaFichaTecnicaBpo"); 
                      System.out.println("strCorreos:"+strCorreos);
                      
                      if(null!=pdfFile){
                          pdfFile.close();
                      }
                      
                      if(null!=inputStream2){
                          inputStream2.close();
                      }
                      
                     return;
                     
                  } catch (IOException e) {
                     throw new OAException("IOException al obtener el ServletOutputStream.",OAException.ERROR); 
                  } catch (SQLException e) {
                      throw new OAException("SQLException al obtener el DataTemplate.",OAException.ERROR);
                  } catch (XDOException e) {
                      throw new OAException("XDOException al obtener el DataTemplate.",OAException.ERROR);
                  }
                  
              }else if("QP_LABS".equals(fichasTecnicasVORowImpl.getOrigin())){
                  oracle.jbo.domain.Number numQplabsHeaderId = fichasTecnicasVORowImpl.getId();
                  String strQplabsGetInfo = AltaFichaTecnicaUtils.executeQplabsGetInfo(oAApplicationModuleImpl,numQplabsHeaderId);
                  try {
                      byte[] aByte = strQplabsGetInfo.getBytes();
                      ByteArrayInputStream inputStream = new ByteArrayInputStream(aByte);
                      ByteArrayOutputStream pdfFile = new ByteArrayOutputStream();
                      AppsContext appsContext = ((OADBTransactionImpl)this.getOADBTransaction()).getAppsContext();
                      Locale locale = ((OADBTransactionImpl)this.getOADBTransaction()).getUserLocale();
                      TemplateHelper.processTemplate(appsContext, 
                                                     AltaFichaTecnicaUtils.strShortApplication ,//XxGQRecibosConstants.XXGQ_APP_SHORT_CUSTOM, 
                                                     "XXQP_PDFT_QPLABS", 
                                                     locale.getLanguage(), 
                                                     locale.getCountry(), 
                                                     inputStream, 
                                                     TemplateHelper.OUTPUT_TYPE_PDF, 
                                                      null, 
                                                     pdfFile);
                      if(null!=inputStream){
                      inputStream.close();
                      }
                      
                      byte[] a2Byte =pdfFile.toByteArray(); 
                      InputStream inputStream2 = new ByteArrayInputStream(a2Byte);
                      
                      String strCorreos = enviaCorreos(inputStream2,"AltaFichaTecnicaQplabs");   
                      System.out.println("strCorreos:"+strCorreos);
                      
                      if(null!=pdfFile){
                          pdfFile.close();
                      }
                      
                      if(null!=inputStream2){
                          inputStream2.close();
                      }
                      
                     return;
                     
                  } catch (IOException e) {
                     throw new OAException("IOException al obtener el ServletOutputStream.",OAException.ERROR); 
                  } catch (SQLException e) {
                      throw new OAException("SQLException al obtener el DataTemplate.",OAException.ERROR);
                  } catch (XDOException e) {
                      throw new OAException("XDOException al obtener el DataTemplate.",OAException.ERROR);
                  }
              } /** END if("MYP".equals(fichasTecnicasVORowImpl.getOrigin())){ **/
            } /** END if("Y".equals(fichasTecnicasVORowImpl.getIsSelected())){ **/
          } /** END  while(iteratorFichasTecnicas.hasNext()){ **/
        iteratorFichasTecnicas.closeRowSetIterator();
        if(0==countIsSelected){
        throw new OAException("Seleccionar al menos una linea.",OAException.ERROR); 
        }
        
        } /** END if(null!=fichasTecnicasVOImpl){ **/
        
    }

    private String enviaCorreos(InputStream pInputStream
                               ,String pStrNombreDocumento) {
        System.out.println("Entra enviaCorreos");
        String retval = null;
        OADBTransaction  oADBTransaction = this.getOADBTransaction();

        Connection connection =   oADBTransaction.getJdbcConnection();
          String strPrepStmt = " SELECT ID                     \n" + 
                               "        ,RESPONSABILIDAD   \n" + 
                               "        ,USUARIO               \n" + 
                               "        ,AREA                  \n" + 
                               "        ,CORREO               \n" + 
                               "        ,IS_ENABLED               \n" + 
                               "        ,CREATED_BY               \n" + 
                               "        ,CREATION_DATE          \n" + 
                               "        ,LAST_UPDATED_BY        \n" + 
                               "        ,LAST_UPDATE_DATE      \n" + 
                               "        ,LAST_UPDATE_LOGIN     \n" + 
                               "        ,ATTRIBUTE_CATEGORY    \n" + 
                               "        ,ATTRIBUTE1            \n" + 
                               "        ,ATTRIBUTE2            \n" + 
                               "        ,ATTRIBUTE3            \n" + 
                               "        ,ATTRIBUTE4            \n" + 
                               "        ,ATTRIBUTE5            \n" + 
                               " FROM  XXQP_PDFT_DISTRIBUCION\n" + 
                               " WHERE IS_ENABLED = 'Y' ";

           
              PreparedStatement prepStmt = null;
              ResultSet resultSet = null;
              try
              {
                prepStmt = connection.prepareStatement(strPrepStmt,ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                resultSet = prepStmt.executeQuery();
                int count = 0; 
                while(resultSet.next()){
                    String strCorreo = null; 
                    strCorreo = resultSet.getString("CORREO");  
                    if(count>0){
                        retval = retval+","+strCorreo;
                    }else if(count==0){
                        retval = strCorreo; 
                    }
                   count = count +1; 
               }
                
             } catch (SQLException sqle)
             {
              throw new OAException("EXCEPTION metodo enviaCorreos clase MasivoYPlatinumAMImpl:"+sqle.getErrorCode()+" , "+sqle.getMessage(),OAException.ERROR);
             }
            closeResultSet(resultSet);
            closePreparedStatement(prepStmt);
         
        
        java.util.Map<String,String> map = new java.util.HashMap<String,String>();
        map.put("Responsablidad",""); 
        map.put("Usuario",""); 
        map.put("Area",""); 
        map.put("Correo",retval); 
        
        testDeliveryManager(pInputStream,map,pStrNombreDocumento);
        
         return retval; 

    }

    private void testDeliveryManager(InputStream pInputStream, 
                                     Map<String, String> map,
                                     String pStrNombreDocumento) {
        System.out.println("Entra testDeliveryManager.");
        DeliveryManager deliveryManager = null;
        DeliveryRequest deliveryRequest = null; 
        String strCorreo = map.get("Correo");
        /***********************************************************************
         04102019
        try {
            deliveryManager = new DeliveryManager();
            deliveryRequest = deliveryManager.createRequest(DeliveryManager.TYPE_SMTP_EMAIL);
            deliveryRequest.addProperty(DeliveryPropertyDefinitions.SMTP_SUBJECT,"Test Delivery Manager");
            deliveryRequest.addProperty(DeliveryPropertyDefinitions.SMTP_HOST,"mail.qualitypost.com.mx");
            deliveryRequest.addProperty(DeliveryPropertyDefinitions.SMTP_PORT,"1825");
            deliveryRequest.addProperty(DeliveryPropertyDefinitions.SMTP_FROM,AltaFichaTecnicaAMImpl.strXxqpPdftEmail);
            deliveryRequest.addProperty(DeliveryPropertyDefinitions.SMTP_USERNAME,AltaFichaTecnicaAMImpl.strXxqpPdftEmail);
            deliveryRequest.addProperty(DeliveryPropertyDefinitions.SMTP_PASSWORD,AltaFichaTecnicaAMImpl.strXxqpPdftEmailPwd);
            deliveryRequest.addProperty(DeliveryPropertyDefinitions.SMTP_TO_RECIPIENTS,strCorreo);
            deliveryRequest.addProperty(DeliveryPropertyDefinitions.SMTP_CONTENT_FILENAME,pStrNombreDocumento+".pdf");
            deliveryRequest.addProperty(DeliveryPropertyDefinitions.SMTP_CONTENT_TYPE,"application/pdf");
            deliveryRequest.setDocument(pInputStream);
            deliveryRequest.submit(); 
            deliveryRequest.close();
        } catch (InvalidFactoryException e) {
           System.out.println("InvalidFactoryException:"+e.getMessage());
        } catch (UndefinedRequestTypeException e) {
            System.out.println("UndefinedRequestTypeException:"+e.getMessage());
        } catch (DeliveryException e) {
             System.out.println("DeliveryException:"+e.getMessage()+", "+e.getCause());
        }        
        ************************************************************************/
         Properties properties =System.getProperties();
         properties.put("mail.smtp.auth","true");
         properties.put("mail.smtp.starttls.enable","true");
         properties.put("mail.smtp.host","mail.qualitypost.com.mx");
         properties.put("mail.smtp.port","465");
         properties.put("mail.smtp.socketFactory.port", "465"); /*SSL Port*/
         properties.put("mail.smtp.socketFactory.class","javax.net.ssl.SSLSocketFactory"); /*SSL Factory Class*/
         
          strXxqpPdftEmail = this.getOADBTransaction().getProfile("XXQP_PDFT_EMAIL"); 
          strXxqpPdftEmailPwd = this.getOADBTransaction().getProfile("XXQP_PDFT_EMAIL_PWD");
         
         Session session = Session.getInstance(properties,new javax.mail.Authenticator(){
                                                         protected javax.mail.PasswordAuthentication getPasswordAuthentication(){
                                                          return new javax.mail.PasswordAuthentication (AltaFichaTecnicaAMImpl.strXxqpPdftEmail,AltaFichaTecnicaAMImpl.strXxqpPdftEmailPwd);
                                                         }
                                                         }
                                                );
         session.setDebug(true);
         Message message = new MimeMessage(session);
         try {
             message.setFrom( new InternetAddress(AltaFichaTecnicaAMImpl.strXxqpPdftEmail));
             message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(strCorreo));
             message.setSubject("Delivery Manager QualityPost Fichas tecnicas.");
             /* Create the message part */
                      BodyPart messageBodyPart = new MimeBodyPart();
             /* Now set the actual message */
                      messageBodyPart.setText("Notificacion de Ficha Tecnica");
             /* Create a multipar message */
                      Multipart multipart = new MimeMultipart();
                      /* Set text message part */
                      multipart.addBodyPart(messageBodyPart);
                      // Part two is attachment
                      messageBodyPart = new MimeBodyPart();
                      DataSource source = null; /**new FileDataSource(filename); **/
                        try {
                            source = new ByteArrayDataSource(pInputStream,"application/pdf");
                        } catch (IOException e) {
                            // TODO
                        }
                      messageBodyPart.setDataHandler(new DataHandler(source));
                      messageBodyPart.setFileName(pStrNombreDocumento+".pdf");
                      multipart.addBodyPart(messageBodyPart);

                      // Send the complete message parts
                      message.setContent(multipart);
             
             Transport.send(message);
         } catch (MessagingException me) {
             System.out.println("MessagingException:"+me.getMessage());
         }
         
        System.out.println("Sale testDeliveryManager."); 
    }

    public void cambioDePrecioFichaTecnica(OAPageContext pageContext
                                          ,String pUserPdftId
                                          ) {
        FichasTecnicasVOImpl fichasTecnicasVOImpl = getFichasTecnicasVO1();
        FichasTecnicasVORowImpl fichasTecnicasVORowImpl = null; 
        int countIsSelected = 0;
        if(null!=fichasTecnicasVOImpl){
        if(0==fichasTecnicasVOImpl.getFetchedRowCount()){
         return;
        }
          RowSetIterator iteratorFichasTecnicas =  fichasTecnicasVOImpl.createRowSetIterator(null);
          while(iteratorFichasTecnicas.hasNext()){
              fichasTecnicasVORowImpl = (FichasTecnicasVORowImpl)iteratorFichasTecnicas.next();
              if("Y".equals(fichasTecnicasVORowImpl.getIsSelected())){
                  countIsSelected = countIsSelected+1;
                  System.out.println("fichasTecnicasVORowImpl.getOrigin():"+fichasTecnicasVORowImpl.getOrigin());
                  if(null!=fichasTecnicasVORowImpl.getStatus()){
                    if("CANCELADA".equals(fichasTecnicasVORowImpl.getStatus())
                      ||"CERRADA".equals(fichasTecnicasVORowImpl.getStatus())){
                       throw new OAException("No se puede modificar una ficha tecnica con este status.",OAException.ERROR);
                    }
                  }
                  
               if("MYP".equals(fichasTecnicasVORowImpl.getOrigin())){
                   com.sun.java.util.collections.HashMap parameters = new com.sun.java.util.collections.HashMap();
                   parameters.put("pMyPHeaderId",fichasTecnicasVORowImpl.getId().toString() );
                   parameters.put("pMyPCambioDePrecio","Y");
                   parameters.put("pUserPdftId",pUserPdftId);
                   pageContext.setForwardURL("OA.jsp?page=/xxqp/oracle/apps/ar/pdft/altafitec/masiplat/webui/MasivoYPlatinumReOnPG&"+OASubTabLayoutBean.OA_SELECTED_SUBTAB_IDX+"=0" /*url*/
                                             ,null /*functionName*/
                                             ,OAWebBeanConstants.KEEP_MENU_CONTEXT /*menuContextAction*/
                                             ,null /*menuName*/
                                             ,parameters /*parameters*/
                                             ,false /*retainAM*/
                                             ,OAWebBeanConstants.ADD_BREAD_CRUMB_NO /*addBreadCrumb*/
                                             ,OAException.ERROR /*messagingLevel*/
                                             );     
               }else if("BPO".equals(fichasTecnicasVORowImpl.getOrigin())){
                   com.sun.java.util.collections.HashMap parameters = new com.sun.java.util.collections.HashMap();
                   parameters.put("pBpoHeaderId",fichasTecnicasVORowImpl.getId().toString() );
                   parameters.put("pBpoCambioDePrecio","Y");
                   parameters.put("pUserPdftId",pUserPdftId);
                   pageContext.setForwardURL("OA.jsp?page=/xxqp/oracle/apps/ar/pdft/altafitec/bpo/webui/BpoReOnPG&"+OASubTabLayoutBean.OA_SELECTED_SUBTAB_IDX+"=0" /*url*/
                                             ,null /*functionName*/
                                             ,OAWebBeanConstants.KEEP_MENU_CONTEXT /*menuContextAction*/
                                             ,null /*menuName*/
                                             ,parameters /*parameters*/
                                             ,false /*retainAM*/
                                             ,OAWebBeanConstants.ADD_BREAD_CRUMB_NO /*addBreadCrumb*/
                                             ,OAException.ERROR /*messagingLevel*/
                                             );     
               }else if("QP_LABS".equals(fichasTecnicasVORowImpl.getOrigin())){
                   com.sun.java.util.collections.HashMap parameters = new com.sun.java.util.collections.HashMap();
                   parameters.put("pQplabsHeaderId",fichasTecnicasVORowImpl.getId().toString() );
                   parameters.put("pQplabsCambioDePrecio","Y");
                   parameters.put("pUserPdftId",pUserPdftId);
                   pageContext.setForwardURL("OA.jsp?page=/xxqp/oracle/apps/ar/pdft/altafitec/qplabs/webui/QpLabsReOnPG" /*url*/
                                             ,null /*functionName*/
                                             ,OAWebBeanConstants.KEEP_MENU_CONTEXT /*menuContextAction*/
                                             ,null /*menuName*/
                                             ,parameters /*parameters*/
                                             ,false /*retainAM*/
                                             ,OAWebBeanConstants.ADD_BREAD_CRUMB_NO /*addBreadCrumb*/
                                             ,OAException.ERROR /*messagingLevel*/
                                             );     
               }
              } /** END  if("Y".equals(fichasTecnicasVORowImpl.getIsSelected())){ **/
          } /** END while(fichasTecnicasVOImpl.hasNext()){ **/
           iteratorFichasTecnicas.closeRowSetIterator();
          if(0==countIsSelected){
          throw new OAException("Seleccionar al menos una linea.",OAException.ERROR); 
          }
        } /** END if(null!=fichasTecnicasVOImpl){ **/
        
    }

    public String getFormularioByUnidadDeNegocio(String pStrUnidadDeNegocioValue) {
        String retval = "";
        OADBTransaction  oADBTransaction = this.getOADBTransaction();
        Connection connection =   oADBTransaction.getJdbcConnection();
        String strPrepStmt = " SELECT XxqpPdftMgrCatalogosEO.ATTRIBUTE1\r" + 
                             "   FROM XXQP_PDFT_MGR_CATALOGOS XxqpPdftMgrCatalogosEO\r" + 
                             " WHERE LOOKUP_TYPE = 'UNIDAD_DE_NEGOCIO'\r" + 
                             "    AND STATUS = 'Y'\r" + 
                             "    AND LOOKUP_CODE = '"+pStrUnidadDeNegocioValue+"'";
        PreparedStatement prepStmt = null;
        ResultSet resultSet = null;
        try
        {
          prepStmt = connection.prepareStatement(strPrepStmt,ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
          resultSet = prepStmt.executeQuery();
          int count = 0; 
          while(resultSet.next()){
            retval = resultSet.getString("ATTRIBUTE1");  
         }
          
        } catch (SQLException sqle)
        {
        throw new OAException("EXCEPTION metodo getFormularioByUnidadDeNegocio clase MasivoYPlatinumAMImpl:"+sqle.getErrorCode()+" , "+sqle.getMessage(),OAException.ERROR);
        }
        closeResultSet(resultSet);
        closePreparedStatement(prepStmt);
        return retval; 
    }
    
}
