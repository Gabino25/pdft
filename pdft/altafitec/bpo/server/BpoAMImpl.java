package xxqp.oracle.apps.ar.pdft.altafitec.bpo.server;

import java.io.IOException;

import java.io.InputStream;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import java.sql.Timestamp;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

import java.util.Properties;

import javax.activation.DataHandler;
import javax.activation.DataSource;

import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.mail.util.ByteArrayDataSource;

import oracle.apps.fnd.common.MessageToken;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.OAFwkConstants;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.apps.fnd.framework.webui.OAPageContext;
import oracle.apps.fnd.framework.webui.beans.OAWebBean;
import oracle.apps.fnd.framework.webui.beans.form.OAFormValueBean;
import oracle.apps.fnd.framework.webui.beans.message.OAMessageChoiceBean;
import oracle.apps.fnd.framework.webui.beans.message.OAMessageTextInputBean;

import oracle.apps.xdo.delivery.DeliveryException;
import oracle.apps.xdo.delivery.DeliveryManager;
import oracle.apps.xdo.delivery.DeliveryPropertyDefinitions;
import oracle.apps.xdo.delivery.DeliveryRequest;
import oracle.apps.xdo.delivery.InvalidFactoryException;
import oracle.apps.xdo.delivery.UndefinedRequestTypeException;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.Number;
import oracle.jdbc.OracleCallableStatement;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BpoAMImpl extends OAApplicationModuleImpl {

    public static String strXxqpPdftEmail;
    public static String strXxqpPdftEmailPwd;
        
    /**This is the default constructor (do not remove)
     */
    public BpoAMImpl() {
    }

    /**Sample main for debugging Business Components code using the tester.
     */
    public static void main(String[] args) {
        launchTester("xxqp.oracle.apps.ar.pdft.altafitec.bpo.server", /* package name */
      "BpoAMLocal" /* Configuration Name */);
    }
    /**Container's getter for XxqpPdftBpoHeaderVO1
     */
    public XxqpPdftBpoHeaderVOImpl getXxqpPdftBpoHeaderVO1() {
        return (XxqpPdftBpoHeaderVOImpl)findViewObject("XxqpPdftBpoHeaderVO1");
    }
    /**Container's getter for PrecioTmpVO1
     */
    public PrecioTmpVOImpl getPrecioTmpVO1() {
        return (PrecioTmpVOImpl)findViewObject("PrecioTmpVO1");
    }
    /**Container's getter for XxqpPdftBpoPrecioVO1
     */
    public XxqpPdftBpoPrecioVOImpl getXxqpPdftBpoPrecioVO1() {
        return (XxqpPdftBpoPrecioVOImpl)findViewObject("XxqpPdftBpoPrecioVO1");
    }
    /**Container's getter for XxqpPdftBpoServicioVO1
     */
    public XxqpPdftBpoServicioVOImpl getXxqpPdftBpoServicioVO1() {
        return (XxqpPdftBpoServicioVOImpl)findViewObject("XxqpPdftBpoServicioVO1");
    }
    /**Container's getter for XxqpPdftBpoRequeAdicioAdquVO1
     */
    public XxqpPdftBpoRequeAdicioAdquVOImpl getXxqpPdftBpoRequeAdicioAdquVO1() {
        return (XxqpPdftBpoRequeAdicioAdquVOImpl)findViewObject("XxqpPdftBpoRequeAdicioAdquVO1");
    }

    /**Container's getter for XxqpPdftBpoRequeAdicioGyCVO1
     */
    public XxqpPdftBpoRequeAdicioGyCVOImpl getXxqpPdftBpoRequeAdicioGyCVO1() {
        return (XxqpPdftBpoRequeAdicioGyCVOImpl)findViewObject("XxqpPdftBpoRequeAdicioGyCVO1");
    }

    /**Container's getter for XxqpPdftBpoRequeAdicioOperVO1
     */
    public XxqpPdftBpoRequeAdicioOperVOImpl getXxqpPdftBpoRequeAdicioOperVO1() {
        return (XxqpPdftBpoRequeAdicioOperVOImpl)findViewObject("XxqpPdftBpoRequeAdicioOperVO1");
    }
    /**Container's getter for XxqpPdftBpoRequeAdicioVO1
     */
    public XxqpPdftBpoRequeAdicioVOImpl getXxqpPdftBpoRequeAdicioVO1() {
        return (XxqpPdftBpoRequeAdicioVOImpl)findViewObject("XxqpPdftBpoRequeAdicioVO1");
    }
    
    /**Container's getter for XxqpPdftBpoPagoVO1
     */
    public XxqpPdftBpoPagoVOImpl getXxqpPdftBpoPagoVO1() {
        return (XxqpPdftBpoPagoVOImpl)findViewObject("XxqpPdftBpoPagoVO1");
    }

    public void fillCamposHead(OAPageContext pageContext, OAWebBean webBean) {
        OAMessageTextInputBean FechaActualBean = (OAMessageTextInputBean)webBean.findChildRecursive("Fecha");                 
       /** OAMessageTextInputBean EjecutivoBean = (OAMessageTextInputBean)webBean.findChildRecursive("Ejecutivo");  NA 13072018 **/
        OAMessageTextInputBean NombreDelClienteBean = (OAMessageTextInputBean)webBean.findChildRecursive("NombreDelCliente");  
        OAMessageTextInputBean RazonSocialDelClienteBean = (OAMessageTextInputBean)webBean.findChildRecursive("RazonSocialDelCliente"); 
        OAMessageChoiceBean EstatusBean = (OAMessageChoiceBean)webBean.findChildRecursive("Estatus"); 
        OAFormValueBean PartyIdBean = (OAFormValueBean)webBean.findChildRecursive("PartyId"); 
        if(null!=EstatusBean){
            EstatusBean.setValue(pageContext,"PRELIMINAR");
        }
        
        OADBTransaction  oADBTransaction = this.getOADBTransaction();

        Connection connection =   oADBTransaction.getJdbcConnection();
          String strPrepStmt = " select   p.party_id " +
                               "         ,to_char(sysdate,'DD-MON-YYYY HH24:MI:SS') fecha_actual\n" + 
                               "         ,(select  fu.user_name||' - '||fu.description \n" + 
                               "             from fnd_user fu\n" + 
                               "           where 1=1 \n" + 
                               "              and user_id = fnd_profile.value('USER_ID')\n" + 
                               "           ) ejecutivo\n" + 
                               "         ,nvl(p.known_as,p.party_name) nombre_del_cliente\n" + 
                               "         ,razon_social\n" + 
                               "   from XXQP_PDFT_CLIENTES_INFO_V p\n" + 
                               "  where p.party_id = ? ";

              String strPartyId = pageContext.getParameter("pPartyId");/*"6041";*/
              if(null==strPartyId){
               throw new OAException("No se encontro valor del parametro pPartyId.",OAException.ERROR); 
              }else{
                  PartyIdBean.setValue(pageContext,strPartyId);
              }
              Double douPartyId = new Double(strPartyId);
              PreparedStatement prepStmt = null;
              ResultSet resultSet = null;
              try
              {
                prepStmt = connection.prepareStatement(strPrepStmt,ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                prepStmt.setDouble(1,douPartyId);
                resultSet = prepStmt.executeQuery();
                while(resultSet.next()){
                  
                  if(null!=FechaActualBean){
                      FechaActualBean.setValue(pageContext,resultSet.getString("fecha_actual"));
                  }
                /**  if(null!=EjecutivoBean){
                      EjecutivoBean.setValue(pageContext,resultSet.getString("ejecutivo"));
                  }  NA 13072018 **/
                  
                  if(null!=NombreDelClienteBean){
                      NombreDelClienteBean.setValue(pageContext,resultSet.getString("nombre_del_cliente"));
                  }
                    
                    if(null!=RazonSocialDelClienteBean){
                      RazonSocialDelClienteBean.setValue(pageContext,resultSet.getString("razon_social"));
                    }
                    
                }
                
              } catch (SQLException sqle)
              {
               throw new OAException("EXCEPTION metodo fillCamposHead clase BpoAMImpl:"+sqle.getErrorCode()+" , "+sqle.getMessage(),OAException.ERROR);
              }finally{
               closeResultSet(resultSet);
               closePreparedStatement(prepStmt);  
              }
    }
    
    /**
       * Metodo que cierra un Result Set
       * @param pResultSet
       */
      private void closeResultSet(ResultSet pResultSet)
      {
        if(null!=pResultSet){
          try
          {
            pResultSet.close();
          } catch (SQLException sqle)
          {
           throw new OAException(sqle.getErrorCode()+ " , "+sqle.getMessage(),OAException.ERROR);
          }
        }
      }

      /**
       * Metodo que cierra un Prepared Statement
       * @param pPrepStmt
       */
      private void closePreparedStatement(PreparedStatement pPrepStmt)
      {
         if(null!=pPrepStmt){
          try
          {
            pPrepStmt.close();
          } catch (SQLException sqle)
          {
             throw new OAException(sqle.getErrorCode()+ " , "+sqle.getMessage(),OAException.ERROR);
          }
        }
      }

    /**
     * Metodo que cierra un Oracle Callable Statement
     * @param pPrepStmt
     */
    private void closeOracleCallableStatement(OracleCallableStatement pOracleCallableStatement)
    {
       if(null!=pOracleCallableStatement){
        try
        {
          pOracleCallableStatement.close();
        } catch (SQLException sqle)
        {
           throw new OAException(sqle.getErrorCode()+ " , "+sqle.getMessage(),OAException.ERROR);
        }
      }
    }

    public void fillHeader(StringBuilder pStrBpoHeaderId, 
                           String pStrContrato, 
                           String pStrContratoExamineFileName, 
                           String pStrContratoExamineContentType, 
                           BlobDomain ContratoExamineByteStream, 
                           String pStrEstatusValue, 
                           String pStrUnidadDeNegocioValue, 
                           String pStrEmpresaQueFacturaValue, 
                           String pStrCicloFacturacionValue, 
                           String pStrFechaInicioOperacionValue, 
                           String pStrPartyID,
                           String pStrEjecutivo,
                           String pStrArticuloOracle,
                           String pStrExamine1FileName, 
                           String pStrExamine1ContentType, 
                           BlobDomain Examine1ByteStream, 
                           String pStrExamine2FileName, 
                           String pStrExamine2ContentType, 
                           BlobDomain Examine2ByteStream, 
                           String pStrExamine3FileName, 
                           String pStrExamine3ContentType, 
                           BlobDomain Examine3ByteStream,
                           String pCurrencyValue) {
        
           
        XxqpPdftBpoHeaderVOImpl xxqpPdftBpoHeaderVOImpl = getXxqpPdftBpoHeaderVO1();  
        XxqpPdftBpoHeaderVORowImpl xxqpPdftBpoHeaderVORowImpl = null; 
        OADBTransaction oADBTransaction = this.getOADBTransaction();
        
        oracle.jbo.domain.Number numBpoHeaderId = oADBTransaction.getSequenceValue("XXQP_PDFT_BPO_HEADER_S");
        oracle.jbo.domain.Number numNumeroFt = oADBTransaction.getSequenceValue("XXQP_PDFT_NUMERO_FT_S");
        oracle.jbo.domain.Number numPartyId=null;

           try {
               numPartyId = new oracle.jbo.domain.Number(pStrPartyID);
           } catch (SQLException sqle) {
              throw new OAException("Excepcion metodo fillHeader attributo numPartyId.",OAException.ERROR);
           }
           
        if(null!=xxqpPdftBpoHeaderVOImpl){
         if(!xxqpPdftBpoHeaderVOImpl.isPreparedForExecution()){
             xxqpPdftBpoHeaderVOImpl.executeQuery();
         }
            xxqpPdftBpoHeaderVORowImpl = (XxqpPdftBpoHeaderVORowImpl)xxqpPdftBpoHeaderVOImpl.createRow();
            xxqpPdftBpoHeaderVORowImpl.setId(numBpoHeaderId);
            xxqpPdftBpoHeaderVORowImpl.setNumeroFt(numNumeroFt);
            xxqpPdftBpoHeaderVORowImpl.setContratoFlag(pStrContrato);
            xxqpPdftBpoHeaderVORowImpl.setContratoFileName(pStrContratoExamineFileName);
            xxqpPdftBpoHeaderVORowImpl.setContratoContentType(pStrContratoExamineContentType);
            xxqpPdftBpoHeaderVORowImpl.setContratoFile(ContratoExamineByteStream);
            xxqpPdftBpoHeaderVORowImpl.setStatus(pStrEstatusValue);
            xxqpPdftBpoHeaderVORowImpl.setUnidadDeNegocioC(pStrUnidadDeNegocioValue);
            xxqpPdftBpoHeaderVORowImpl.setEmpresaQueFacturaC(pStrEmpresaQueFacturaValue);
            xxqpPdftBpoHeaderVORowImpl.setFrecuenciaFacturacionC(pStrCicloFacturacionValue);
             if(null!=pStrFechaInicioOperacionValue){
              xxqpPdftBpoHeaderVORowImpl.setFechaInicialOperacion(new oracle.jbo.domain.Date(pStrFechaInicioOperacionValue));
              }
            xxqpPdftBpoHeaderVORowImpl.setPartyId(numPartyId);
            xxqpPdftBpoHeaderVORowImpl.setEjecutivo(pStrEjecutivo);
            xxqpPdftBpoHeaderVORowImpl.setArticuloOracle(pStrArticuloOracle);
            xxqpPdftBpoHeaderVORowImpl.setFileName1(pStrExamine1FileName);
            xxqpPdftBpoHeaderVORowImpl.setContentType1(pStrExamine1ContentType);
            xxqpPdftBpoHeaderVORowImpl.setFile1(Examine1ByteStream);
            xxqpPdftBpoHeaderVORowImpl.setFileName2(pStrExamine2FileName);
            xxqpPdftBpoHeaderVORowImpl.setContentType2(pStrExamine2ContentType);
            xxqpPdftBpoHeaderVORowImpl.setFile2(Examine2ByteStream);
            xxqpPdftBpoHeaderVORowImpl.setFileName3(pStrExamine3FileName);
            xxqpPdftBpoHeaderVORowImpl.setContentType3(pStrExamine3ContentType);
            xxqpPdftBpoHeaderVORowImpl.setFile3(Examine3ByteStream);
            xxqpPdftBpoHeaderVORowImpl.setCurrencyCode(pCurrencyValue);
          
            xxqpPdftBpoHeaderVOImpl.insertRow(xxqpPdftBpoHeaderVORowImpl);
            
          oADBTransaction.commit();
          
          pStrBpoHeaderId.append(numBpoHeaderId.toString());
            
      } /** END if(null!=xxqpPdftBpoHeaderVOImpl){ **/
    }

    

    public XxqpPdftBpoHeaderVORowImpl initBpoHeaderVO(String pStrBpoHeaderId) {
        XxqpPdftBpoHeaderVORowImpl retval = null;
        oracle.jbo.domain.Number numBpoHeaderId=null;
        try {
            numBpoHeaderId = new oracle.jbo.domain.Number(pStrBpoHeaderId);
        } catch (SQLException sqle) {
            throw new OAException("SQLException metodo initBpoHeaderVO parametro pStrBpoHeaderId",OAException.ERROR); 
        }
        XxqpPdftBpoHeaderVOImpl xxqpPdftBpoHeaderVOImpl = getXxqpPdftBpoHeaderVO1();
        XxqpPdftBpoHeaderVORowImpl xxqpPdftBpoHeaderVORowImpl = null; 
        if(null!=xxqpPdftBpoHeaderVOImpl){
          if(!xxqpPdftBpoHeaderVOImpl.isPreparedForExecution()){
              xxqpPdftBpoHeaderVOImpl.initByBpoHeaderId(numBpoHeaderId);
          }
          
           RowSetIterator BpoHeaderIterator = xxqpPdftBpoHeaderVOImpl.createRowSetIterator(null);
           while(BpoHeaderIterator.hasNext()){
               xxqpPdftBpoHeaderVORowImpl = (XxqpPdftBpoHeaderVORowImpl)BpoHeaderIterator.next();
               retval = xxqpPdftBpoHeaderVORowImpl;
               break;
           }
            BpoHeaderIterator.closeRowSetIterator();
          
        } /** END if(null!=xxqpPdftBpoHeaderVOImpl){ **/
        
        return retval;
    }

   

    public void insertPrecioTmpRowVo() {
        PrecioTmpVOImpl precioTmpVOImpl =getPrecioTmpVO1();
        PrecioTmpVORowImpl precioTmpVORowImpl=null; 
        PrecioTmpVORowImpl precioTmpVORowLastImpl=null; 
        oracle.jbo.domain.Number nextLine = null; 
        if(null!=precioTmpVOImpl){
         if(!precioTmpVOImpl.isPreparedForExecution()){
             precioTmpVOImpl.executeQuery();
         }
         
         if(precioTmpVOImpl.getFetchedRowCount()==0){
             nextLine = new oracle.jbo.domain.Number(1);
             
         }else{
             precioTmpVORowLastImpl = (PrecioTmpVORowImpl)precioTmpVOImpl.getCurrentRow();
             nextLine = precioTmpVORowLastImpl.getLine().add(new oracle.jbo.domain.Number(1));
         }
            precioTmpVORowImpl = (PrecioTmpVORowImpl)precioTmpVOImpl.createRow();
            precioTmpVORowImpl.setLine(nextLine);
            precioTmpVOImpl.insertRow(precioTmpVORowImpl);
        }
    }


    public void fillPrecio(StringBuilder pStrBpoHeaderId) {
    
        oracle.jbo.domain.Number numBpoHeaderId=null;
        try {
            numBpoHeaderId = new oracle.jbo.domain.Number(pStrBpoHeaderId.toString());
        } catch (SQLException sqle) {
            throw new OAException("SQLException metodo fillPrecio parametro pStrBpoHeaderId",OAException.ERROR); 
        }
        
        PrecioTmpVOImpl precioTmpVOImpl = getPrecioTmpVO1();
        PrecioTmpVORowImpl precioTmpVORowImpl=null; 
        
        XxqpPdftBpoPrecioVOImpl xxqpPdftBpoPrecioVOImpl = getXxqpPdftBpoPrecioVO1();
        XxqpPdftBpoPrecioVORowImpl xxqpPdftBpoPrecioVORowImpl=null; 
        
        OADBTransaction oADBTransaction= this.getOADBTransaction();
        
        if(null!=precioTmpVOImpl){
         RowSetIterator iterPrecioTmp =  precioTmpVOImpl.createRowSetIterator(null);
         while(iterPrecioTmp.hasNext()){
             precioTmpVORowImpl = (PrecioTmpVORowImpl)iterPrecioTmp.next();
             
             if(null!=xxqpPdftBpoPrecioVOImpl){
              if(!xxqpPdftBpoPrecioVOImpl.isPreparedForExecution()){
                  xxqpPdftBpoPrecioVOImpl.executeQuery();
               }
                 xxqpPdftBpoPrecioVORowImpl = (XxqpPdftBpoPrecioVORowImpl)xxqpPdftBpoPrecioVOImpl.createRow();
                 oracle.jbo.domain.Number numBpoPrecioId = oADBTransaction.getSequenceValue("XXQP_PDFT_BPO_PRECIO_S");
                 xxqpPdftBpoPrecioVORowImpl.setId(numBpoPrecioId);
                 xxqpPdftBpoPrecioVORowImpl.setBpoHeaderId(numBpoHeaderId);
                 xxqpPdftBpoPrecioVORowImpl.setConcepto(precioTmpVORowImpl.getConcepto());
                 xxqpPdftBpoPrecioVORowImpl.setCantidad(precioTmpVORowImpl.getCantidad());
                 xxqpPdftBpoPrecioVORowImpl.setPrecioUnitario(precioTmpVORowImpl.getPrecioUnitario());
                 xxqpPdftBpoPrecioVORowImpl.setTotalConcepto(precioTmpVORowImpl.getTotalPorConcepto());
                 xxqpPdftBpoPrecioVOImpl.insertRow(xxqpPdftBpoPrecioVORowImpl);
                
                 oADBTransaction.commit();
             }
         } /** END while(iterPrecioTmp.hasNext()){ **/
        } /** END if(null!=precioTmpVOImpl){ **/
    }

   

    public XxqpPdftBpoPrecioVORowImpl initBpoPrecioVO(String pStrBpoHeaderId) {
        XxqpPdftBpoPrecioVORowImpl retval = null;
        oracle.jbo.domain.Number numBpoHeaderId=null;
        try {
            numBpoHeaderId = new oracle.jbo.domain.Number(pStrBpoHeaderId);
        } catch (SQLException sqle) {
            throw new OAException("SQLException metodo initBpoPrecioVO parametro pStrBpoHeaderId",OAException.ERROR); 
        }
        
        XxqpPdftBpoPrecioVOImpl xxqpPdftBpoPrecioVOImpl = getXxqpPdftBpoPrecioVO1();
        XxqpPdftBpoPrecioVORowImpl xxqpPdftBpoPrecioVORowImpl = null; 
        if(null!=xxqpPdftBpoPrecioVOImpl){
        System.out.println("xxqpPdftBpoPrecioVOImpl.isPreparedForExecution():"+xxqpPdftBpoPrecioVOImpl.isPreparedForExecution());
         if(!xxqpPdftBpoPrecioVOImpl.isPreparedForExecution()){
             xxqpPdftBpoPrecioVOImpl.initByBpoHeaderId(numBpoHeaderId);
         }
           RowSetIterator BpoPrecioIterator = xxqpPdftBpoPrecioVOImpl.createRowSetIterator(null);
           while(BpoPrecioIterator.hasNext()){
               xxqpPdftBpoPrecioVORowImpl = (XxqpPdftBpoPrecioVORowImpl)BpoPrecioIterator.next();
                retval = xxqpPdftBpoPrecioVORowImpl;
                break;
            }
            BpoPrecioIterator.closeRowSetIterator();
        } /** END if(null!=xxqpPdftBpoPrecioVOImpl){ **/
        return retval;
    }

    

    public void fillServicio(StringBuilder pStrBpoHeaderId, 
                             String pStrCobranzaValue, 
                             String pStrVentasValue, 
                             String pStrGestorAdministrativoValue, 
                             String pStrTecnicoValue, 
                             String pStrRecoleDocumMaterValue, 
                             String pStrEntregaAdomicilioValue, 
                             String pStrOtrosValue, 
                            /** Timestamp pDatFechaInicioDelServicioValue,  **/
                             String pStrFechaInicioDelServicioValue,
                             String pStrDiasSemanaLaboraraValue, 
                             String pStrNoHrsDiariasValue, 
                             String pStrElMensajeroManejeValue, 
                             String pStrHorarioDeTrabajoValue, 
                             String pStrDireccionBaseValue, 
                             String pStrObservacionesValue, 
                             String pStrHorarioInicial, 
                             String pStrHorarioFinal,
                             String pStrLunes, 
                             String pStrMartes,
                             String pStrMiercoles,
                             String pStrJueves,
                             String pStrViernes,
                             String pStrSabado,
                             String pStrDomingo,
                             String pStrOtrosIlimitadoValue, 
                             String pStrDireccionBaseIlimitadoValue, 
                             String pStrObservacionesIlimitadoValue
                             ) {
        oracle.jbo.domain.Number numBpoHeaderId=null;
        try {
            numBpoHeaderId = new oracle.jbo.domain.Number(pStrBpoHeaderId.toString());
        } catch (SQLException sqle) {
            throw new OAException("SQLException metodo fillServicio parametro pStrBpoHeaderId",OAException.ERROR); 
        }                     
                             
        XxqpPdftBpoServicioVOImpl xxqpPdftBpoServicioVOImpl = getXxqpPdftBpoServicioVO1(); 
        XxqpPdftBpoServicioVORowImpl xxqpPdftBpoServicioVORowImpl = null; 
        OADBTransaction oADBTransaction = this.getOADBTransaction(); 
        if(null!=xxqpPdftBpoServicioVOImpl){
         if(!xxqpPdftBpoServicioVOImpl.isPreparedForExecution()){
             xxqpPdftBpoServicioVOImpl.executeQuery();
         }
            xxqpPdftBpoServicioVORowImpl = (XxqpPdftBpoServicioVORowImpl)xxqpPdftBpoServicioVOImpl.createRow();
            oracle.jbo.domain.Number numBpoServicioId  = oADBTransaction.getSequenceValue("XXQP_PDFT_BPO_SERVICIO_S"); 
            xxqpPdftBpoServicioVORowImpl.setId(numBpoServicioId);
            xxqpPdftBpoServicioVORowImpl.setBpoHeaderId(numBpoHeaderId);
            xxqpPdftBpoServicioVORowImpl.setCobranza(pStrCobranzaValue);
            xxqpPdftBpoServicioVORowImpl.setVentas(pStrVentasValue);
            xxqpPdftBpoServicioVORowImpl.setGestorAdministrativo(pStrGestorAdministrativoValue);
            xxqpPdftBpoServicioVORowImpl.setTecnico(pStrTecnicoValue);
            xxqpPdftBpoServicioVORowImpl.setRecoleDocMater(pStrRecoleDocumMaterValue);
            xxqpPdftBpoServicioVORowImpl.setEntregaADomicilio(pStrEntregaAdomicilioValue);
            xxqpPdftBpoServicioVORowImpl.setOtros(pStrOtrosValue);
            if(null!=pStrFechaInicioDelServicioValue)
            xxqpPdftBpoServicioVORowImpl.setFechaInicioServicio(new oracle.jbo.domain.Date(pStrFechaInicioDelServicioValue));
            xxqpPdftBpoServicioVORowImpl.setDiasSemanaLaborara(pStrDiasSemanaLaboraraValue);
            xxqpPdftBpoServicioVORowImpl.setNoHrsDiarias(pStrNoHrsDiariasValue);
            xxqpPdftBpoServicioVORowImpl.setElMensajeroManejeC(pStrElMensajeroManejeValue);
            xxqpPdftBpoServicioVORowImpl.setHorarioDeTrabajo(pStrHorarioDeTrabajoValue);
            xxqpPdftBpoServicioVORowImpl.setDireccionBase(pStrDireccionBaseValue);
            xxqpPdftBpoServicioVORowImpl.setObservaciones(pStrObservacionesValue);
            xxqpPdftBpoServicioVORowImpl.setHoraInicio(pStrHorarioInicial);
            xxqpPdftBpoServicioVORowImpl.setHoraFinal(pStrHorarioFinal);
            xxqpPdftBpoServicioVORowImpl.setLunes(pStrLunes);
            xxqpPdftBpoServicioVORowImpl.setMartes(pStrMartes);
            xxqpPdftBpoServicioVORowImpl.setMiercoles(pStrMiercoles);
            xxqpPdftBpoServicioVORowImpl.setJueves(pStrJueves);
            xxqpPdftBpoServicioVORowImpl.setViernes(pStrViernes);
            xxqpPdftBpoServicioVORowImpl.setSabado(pStrSabado);
            xxqpPdftBpoServicioVORowImpl.setDomingo(pStrDomingo);
            if(null!=pStrOtrosIlimitadoValue&&!"".equals(pStrOtrosIlimitadoValue)){
                xxqpPdftBpoServicioVORowImpl.setOtrosIlim(new oracle.jbo.domain.ClobDomain(pStrOtrosIlimitadoValue));
            }else{
                xxqpPdftBpoServicioVORowImpl.setOtrosIlim(null);
            }
            if(null!=pStrDireccionBaseIlimitadoValue&&!"".equals(pStrDireccionBaseIlimitadoValue)){
                xxqpPdftBpoServicioVORowImpl.setDireccionBaseIlim(new oracle.jbo.domain.ClobDomain(pStrDireccionBaseIlimitadoValue));
            }else{
                xxqpPdftBpoServicioVORowImpl.setDireccionBaseIlim(null);
            }
            if(null!=pStrObservacionesIlimitadoValue&&!"".equals(pStrObservacionesIlimitadoValue)){
                xxqpPdftBpoServicioVORowImpl.setObservacionesIlim(new oracle.jbo.domain.ClobDomain(pStrObservacionesIlimitadoValue));
            }else{
                xxqpPdftBpoServicioVORowImpl.setObservacionesIlim(null);
            }
            
            xxqpPdftBpoServicioVOImpl.insertRow(xxqpPdftBpoServicioVORowImpl);
            oADBTransaction.commit();
        } /** END if(null!=xxqpPdftBpoServicioVOImpl){ **/
        
    }

    public void initBpoServicioVO(String pStrBpoHeaderId) {
        oracle.jbo.domain.Number numBpoHeaderId=null;
        try {
            numBpoHeaderId = new oracle.jbo.domain.Number(pStrBpoHeaderId);
        } catch (SQLException sqle) {
            throw new OAException("SQLException metodo initBpoHeaderVO parametro pStrBpoHeaderId",OAException.ERROR); 
        }
        XxqpPdftBpoServicioVOImpl xxqpPdftBpoServicioVOImpl = getXxqpPdftBpoServicioVO1();
        if(null!=xxqpPdftBpoServicioVOImpl){
          if(!xxqpPdftBpoServicioVOImpl.isPreparedForExecution()){
              xxqpPdftBpoServicioVOImpl.initByBpoHeaderId(numBpoHeaderId);
          }
        }
        
    }

    
    
    public void fillRequeAdicio(StringBuilder pStrBpoHeaderId,
                                String pStrCategoria, 
                                String pStrMoto125Value, 
                                String pStrCascoValue, 
                                String pStrCajaGrandeValue, 
                                String pStrCajaChicaRojaValue, 
                                String pStrCamisasValue, 
                                String pStrImpermeableValue, 
                                String pStrTarjetaGasolinaValue, 
                                String pStrPantalonVestirValue, 
                                String pStrCajaNegraValue, 
                                String pStrHieleraValue, 
                                String pStrMovilValue, 
                                String pStrAutomovilValue, 
                                String pStrGuiaRojiValue, 
                                String pStrOtrosValue, 
                                String pStrComentariosValue,
                                String pStrComentariosIlimitadoValue) {
        oracle.jbo.domain.Number numBpoHeaderId=null;
        try {
            numBpoHeaderId = new oracle.jbo.domain.Number(pStrBpoHeaderId.toString());
        } catch (SQLException sqle) {
            throw new OAException("SQLException metodo fillRequeAdicio parametro pStrBpoHeaderId",OAException.ERROR); 
        }     
        OADBTransaction oADBTransaction = this.getOADBTransaction(); 
        XxqpPdftBpoRequeAdicioVOImpl xxqpPdftBpoRequeAdicioVOImpl = getXxqpPdftBpoRequeAdicioVO1(); 
        XxqpPdftBpoRequeAdicioVORowImpl xxqpPdftBpoRequeAdicioVORowImpl = null; 
        if(null!=xxqpPdftBpoRequeAdicioVOImpl){
         if(!xxqpPdftBpoRequeAdicioVOImpl.isPreparedForExecution()){
             xxqpPdftBpoRequeAdicioVOImpl.executeQuery();
         }
            xxqpPdftBpoRequeAdicioVORowImpl = (XxqpPdftBpoRequeAdicioVORowImpl)xxqpPdftBpoRequeAdicioVOImpl.createRow(); 
            oracle.jbo.domain.Number numRequAdicioID = oADBTransaction.getSequenceValue("XXQP_PDFT_BPO_REQUE_ADICIO_S");
            xxqpPdftBpoRequeAdicioVORowImpl.setId(numRequAdicioID);
            xxqpPdftBpoRequeAdicioVORowImpl.setBpoHeaderId(numBpoHeaderId);
            xxqpPdftBpoRequeAdicioVORowImpl.setCategoria(pStrCategoria);
            xxqpPdftBpoRequeAdicioVORowImpl.setMoto125(pStrMoto125Value);
            xxqpPdftBpoRequeAdicioVORowImpl.setCasco(pStrCascoValue);
            xxqpPdftBpoRequeAdicioVORowImpl.setCajaGrande(pStrCajaGrandeValue);
            xxqpPdftBpoRequeAdicioVORowImpl.setCajaChicaRoja(pStrCajaChicaRojaValue);
            xxqpPdftBpoRequeAdicioVORowImpl.setCamisas(pStrCamisasValue);
            xxqpPdftBpoRequeAdicioVORowImpl.setImpermeable(pStrImpermeableValue);
            xxqpPdftBpoRequeAdicioVORowImpl.setTarjetaGasolina(pStrTarjetaGasolinaValue);
            xxqpPdftBpoRequeAdicioVORowImpl.setPantalonVestir(pStrPantalonVestirValue);
            xxqpPdftBpoRequeAdicioVORowImpl.setCajaNegra(pStrCajaNegraValue);
            xxqpPdftBpoRequeAdicioVORowImpl.setHielera(pStrHieleraValue);
            xxqpPdftBpoRequeAdicioVORowImpl.setMovil(pStrMovilValue);
            xxqpPdftBpoRequeAdicioVORowImpl.setAutomovil(pStrAutomovilValue);
            xxqpPdftBpoRequeAdicioVORowImpl.setGuiaRoji(pStrGuiaRojiValue);
            xxqpPdftBpoRequeAdicioVORowImpl.setOtros(pStrOtrosValue);
            xxqpPdftBpoRequeAdicioVORowImpl.setComentarios(pStrComentariosValue);
            if(null!=pStrComentariosIlimitadoValue&&!"".equals(pStrComentariosIlimitadoValue)){
                xxqpPdftBpoRequeAdicioVORowImpl.setComentariosIlim(new oracle.jbo.domain.ClobDomain(pStrComentariosIlimitadoValue));
            }else{
                xxqpPdftBpoRequeAdicioVORowImpl.setComentariosIlim(null);
            }
            xxqpPdftBpoRequeAdicioVOImpl.insertRow(xxqpPdftBpoRequeAdicioVORowImpl);
            oADBTransaction.commit();
        } /** END if(null!=xxqpPdftBpoRequeAdicioVOImpl){ **/
        
    }

    

    public void intiAllBpoRequeAdicioVOS(String pStrBpoHeaderId) {
        oracle.jbo.domain.Number numBpoHeaderId=null;
        try {
            numBpoHeaderId = new oracle.jbo.domain.Number(pStrBpoHeaderId);
        } catch (SQLException sqle) {
            throw new OAException("SQLException metodo initBpoHeaderVO parametro pStrBpoHeaderId",OAException.ERROR); 
        }
        XxqpPdftBpoRequeAdicioGyCVOImpl xxqpPdftBpoRequeAdicioGyCVOImpl =getXxqpPdftBpoRequeAdicioGyCVO1();
        XxqpPdftBpoRequeAdicioOperVOImpl xxqpPdftBpoRequeAdicioOperVOImpl = getXxqpPdftBpoRequeAdicioOperVO1();
        XxqpPdftBpoRequeAdicioAdquVOImpl xxqpPdftBpoRequeAdicioAdquVOImpl = getXxqpPdftBpoRequeAdicioAdquVO1(); 
        
        if(null!=xxqpPdftBpoRequeAdicioGyCVOImpl){
         if(!xxqpPdftBpoRequeAdicioGyCVOImpl.isPreparedForExecution()){
             xxqpPdftBpoRequeAdicioGyCVOImpl.initByBpoHeaderId(numBpoHeaderId);
         }
        } /** END if(null!=xxqpPdftBpoRequeAdicioGyCVOImpl){ **/
        
        if(null!=xxqpPdftBpoRequeAdicioOperVOImpl){
         if(!xxqpPdftBpoRequeAdicioOperVOImpl.isPreparedForExecution()){
             xxqpPdftBpoRequeAdicioOperVOImpl.initByBpoHeaderId(numBpoHeaderId);
         }
        } /** END if(null!=xxqpPdftBpoRequeAdicioOperVOImpl){ **/
       
       if(null!=xxqpPdftBpoRequeAdicioAdquVOImpl){
        if(!xxqpPdftBpoRequeAdicioAdquVOImpl.isPreparedForExecution()){
            xxqpPdftBpoRequeAdicioAdquVOImpl.initByBpoHeaderId(numBpoHeaderId);
        }
       } 
        
    }

   

    public void fillPago(StringBuilder pStrBpoHeaderId, 
                         String pStrEjecutivoDeVentasValue, 
                         String pStrPlazaValue, 
                         String pStrSubtotalValue, 
                         String pStrIVAValue, 
                         String pStrTotalValue, 
                         String pStrFormaDePagoValue, 
                         String pStrDiaDePagoValue) {
        
        oracle.jbo.domain.Number numBpoHeaderId=null;
        oracle.jbo.domain.Number numSubtotal = null; 
        oracle.jbo.domain.Number numIVA = null; 
        oracle.jbo.domain.Number numTotal = null; 
        
        try {
            numBpoHeaderId = new oracle.jbo.domain.Number(pStrBpoHeaderId.toString());
            if(null!=pStrSubtotalValue)
                numSubtotal = new oracle.jbo.domain.Number(pStrSubtotalValue); 
            if(null!=pStrIVAValue)
                numIVA = new oracle.jbo.domain.Number(pStrIVAValue);
            if(null!=pStrTotalValue)
                numTotal = new oracle.jbo.domain.Number(pStrTotalValue);
        } catch (SQLException sqle) {
            throw new OAException("SQLException metodo fillPago parametro pStrBpoHeaderId",OAException.ERROR); 
        }     
        
      XxqpPdftBpoPagoVOImpl xxqpPdftBpoPagoVOImpl = getXxqpPdftBpoPagoVO1(); 
      XxqpPdftBpoPagoVORowImpl xxqpPdftBpoPagoVORowImpl = null; 
      
      OADBTransaction oADBTransaction = this.getOADBTransaction();
      
      if(null!=xxqpPdftBpoPagoVOImpl){
        if(!xxqpPdftBpoPagoVOImpl.isPreparedForExecution()){
            xxqpPdftBpoPagoVOImpl.executeQuery();
        }
        
          xxqpPdftBpoPagoVORowImpl = (XxqpPdftBpoPagoVORowImpl)xxqpPdftBpoPagoVOImpl.createRow();
          oracle.jbo.domain.Number numBpoPagoId = oADBTransaction.getSequenceValue("XXQP_PDFT_BPO_PAGO_S"); 
          xxqpPdftBpoPagoVORowImpl.setId(numBpoPagoId);
          xxqpPdftBpoPagoVORowImpl.setBpoHeaderId(numBpoHeaderId);
          xxqpPdftBpoPagoVORowImpl.setEjecutivoDeVentas(pStrEjecutivoDeVentasValue);
          xxqpPdftBpoPagoVORowImpl.setPlaza(pStrPlazaValue);
          xxqpPdftBpoPagoVORowImpl.setSubtotal(numSubtotal);
          xxqpPdftBpoPagoVORowImpl.setIva(numIVA);
          xxqpPdftBpoPagoVORowImpl.setTotal(numTotal);
          xxqpPdftBpoPagoVORowImpl.setFormaDePagoC(pStrFormaDePagoValue);
          xxqpPdftBpoPagoVORowImpl.setDiaDePago(pStrDiaDePagoValue);
          xxqpPdftBpoPagoVOImpl.insertRow(xxqpPdftBpoPagoVORowImpl);
          oADBTransaction.commit();
      } /** END if(null!=xxqpPdftBpoPagoVOImpl){ **/
      
    }

    public void initBpoPagoVO(String pStrBpoHeaderId) {
        oracle.jbo.domain.Number numBpoHeaderId=null;
        try {
            numBpoHeaderId = new oracle.jbo.domain.Number(pStrBpoHeaderId);
        } catch (SQLException sqle) {
            throw new OAException("SQLException metodo initBpoPagoVO parametro pStrBpoHeaderId",OAException.ERROR); 
        }
        XxqpPdftBpoPagoVOImpl xxqpPdftBpoPagoVOImpl = getXxqpPdftBpoPagoVO1();
        if(null!=xxqpPdftBpoPagoVOImpl){
          if(!xxqpPdftBpoPagoVOImpl.isPreparedForExecution()){
              xxqpPdftBpoPagoVOImpl.initByBpoHeaderId(numBpoHeaderId);
          }
        }
    }

    public void insertInitPrecioTmpRowVo() {
        PrecioTmpVOImpl precioTmpVOImpl =getPrecioTmpVO1();
        PrecioTmpVORowImpl precioTmpVORowImpl=null; 
        oracle.jbo.domain.Number nextLine = null; 
        if(null!=precioTmpVOImpl){
         if(!precioTmpVOImpl.isPreparedForExecution()){
             precioTmpVOImpl.executeQuery();
         }
         
         if(precioTmpVOImpl.getFetchedRowCount()==0){
          nextLine = new oracle.jbo.domain.Number(1);
            precioTmpVORowImpl = (PrecioTmpVORowImpl)precioTmpVOImpl.createRow();
            precioTmpVORowImpl.setLine(nextLine);
            precioTmpVOImpl.insertRow(precioTmpVORowImpl);
         }
        } /** END if(null!=precioTmpVOImpl){ **/
        
    } /** END  public void insertInitPrecioTmpRowVo() **/

    public void refreshPrecioTmpVO() {
        PrecioTmpVOImpl precioTmpVOImpl =getPrecioTmpVO1();
        PrecioTmpVORowImpl precioTmpVORowImpl=null; 
        if(null!=precioTmpVOImpl){
          RowSetIterator iterator =  precioTmpVOImpl.createRowSetIterator(null);
          while(iterator.hasNext()){
             precioTmpVORowImpl = (PrecioTmpVORowImpl)iterator.next();
             if(null!=precioTmpVORowImpl.getCantidad()&&null!=precioTmpVORowImpl.getPrecioUnitario()){
                 precioTmpVORowImpl.setTotalPorConcepto(precioTmpVORowImpl.getCantidad().multiply(precioTmpVORowImpl.getPrecioUnitario()));
             }
          }
          iterator.closeRowSetIterator();
        }
    } /** END  public void refreshPrecioTmpVO() { **/


    /**Container's getter for BpoHeaderTmpVO1
     */
    public BpoHeaderTmpVOImpl getBpoHeaderTmpVO1() {
        return (BpoHeaderTmpVOImpl)findViewObject("BpoHeaderTmpVO1");
    }

    public void initBpoHeaderTmpVO() {
        BpoHeaderTmpVOImpl bpoHeaderTmpVOImpl  = getBpoHeaderTmpVO1();
        BpoHeaderTmpVORowImpl bpoHeaderTmpVORowImpl = null; 
        if(null!=bpoHeaderTmpVOImpl){
        if(1==bpoHeaderTmpVOImpl.getFetchedRowCount()){
        return; 
        }
         if(!bpoHeaderTmpVOImpl.isPreparedForExecution()){
             bpoHeaderTmpVOImpl.executeQuery();
         }
            bpoHeaderTmpVORowImpl = (BpoHeaderTmpVORowImpl)bpoHeaderTmpVOImpl.createRow();
            bpoHeaderTmpVOImpl.insertRow(bpoHeaderTmpVORowImpl);
        }/** END if(null!=bpoHeaderTmpVOImpl){ **/
        
    }

    public String executeBpoGetInfo(String pModificacion){
        String retval = null; 
        String strCallableStmt = " BEGIN \n" + 
                                 "  APPS.XXQP_PDFT_BPO_PKG.GET_INFO ( PSO_ERRMSG         => :1\n" + 
                                 "                                  , PSO_ERRCOD         => :2\n" + 
                                 "                                  , PCO_INFO           => :3\n" + 
                                 "                                  , PNI_BPO_HEADER_ID  => :4\n "+
                                 "                                  , PSI_MODIF          => :5\n" + 
                                 "                                  );\n" + 
                                 " END; \n";
        OADBTransaction oadbtransaction = (OADBTransaction)getTransaction();
        OracleCallableStatement oraclecallablestatement =  (OracleCallableStatement)oadbtransaction.createCallableStatement(strCallableStmt, 1);
        oracle.jbo.domain.Number numBpoHeaderId = (oracle.jbo.domain.Number)this.getXxqpPdftBpoHeaderVO1().getCurrentRow().getAttribute("Id");
        System.out.println("numBpoHeaderId:"+numBpoHeaderId);
        try {
            oraclecallablestatement.registerOutParameter(1,Types.VARCHAR);
            oraclecallablestatement.registerOutParameter(2,Types.VARCHAR);
            oraclecallablestatement.registerOutParameter(3,Types.CLOB);
            oraclecallablestatement.setDouble(4,numBpoHeaderId.doubleValue());
            oraclecallablestatement.setString(5,pModificacion);
            oraclecallablestatement.execute();
            java.sql.Clob retvalClob = oraclecallablestatement.getClob(3);
            java.io.Reader reader =retvalClob.getCharacterStream();
            java.io.BufferedReader bufferReader = new java.io.BufferedReader(reader);
            String retvalxml = "";
            String line = null; 
            while((line = bufferReader.readLine())!=null){
                retvalxml = retvalxml+line;
            }
            /** System.out.println("retvalxml:"+retvalxml); **/
            retval = retvalxml;
            bufferReader.close();
            reader.close();
                        
        } catch (SQLException e) {
            System.out.println("SQLException en el metodo executeBpoGetInfo:"+e.getErrorCode()+", "+e.getMessage());
            throw new OAException("SQLException en el metodo executeBpoGetInfo:"+e.getErrorCode()+", "+e.getMessage(),OAException.ERROR); 
        }catch (IOException ioe) {
            System.out.println("IOException en el metodo executeBpoGetInfo"+ioe.getMessage());
            throw new OAException("IOException en el metodo executeBpoGetInfo:"+ioe.getMessage(),OAException.ERROR);
        }finally{
            closeOracleCallableStatement(oraclecallablestatement);
        }
      
      return retval;   
        
    } /** END public String executeBpoGetInfo() **/

    public void insertXxqpPdftBpoPrecioVO() {
    
        XxqpPdftBpoHeaderVOImpl xxqpPdftBpoHeaderVOImpl = this.getXxqpPdftBpoHeaderVO1();
        XxqpPdftBpoHeaderVORowImpl xxqpPdftBpoHeaderVORowImpl = null; 
        RowSetIterator BpoHeaderIterator =  xxqpPdftBpoHeaderVOImpl.createRowSetIterator(null);
        if(BpoHeaderIterator.hasNext()){
         xxqpPdftBpoHeaderVORowImpl = (XxqpPdftBpoHeaderVORowImpl)BpoHeaderIterator.next();
        }
        BpoHeaderIterator.closeRowSetIterator();
        
        oracle.jbo.domain.Number numBpoHeaderId = xxqpPdftBpoHeaderVORowImpl.getId();
    
        XxqpPdftBpoPrecioVOImpl xxqpPdftBpoPrecioVOImpl = getXxqpPdftBpoPrecioVO1();
        XxqpPdftBpoPrecioVORowImpl xxqpPdftBpoPrecioVORowImpl = null; 

        OADBTransaction oADBTransaction= this.getOADBTransaction();

         if(null!=xxqpPdftBpoPrecioVOImpl){
          if(!xxqpPdftBpoPrecioVOImpl.isPreparedForExecution()){
              xxqpPdftBpoPrecioVOImpl.executeQuery();
           }
             xxqpPdftBpoPrecioVOImpl.first();
             xxqpPdftBpoPrecioVORowImpl = (XxqpPdftBpoPrecioVORowImpl)xxqpPdftBpoPrecioVOImpl.createRow();
             oracle.jbo.domain.Number numBpoPrecioId = oADBTransaction.getSequenceValue("XXQP_PDFT_BPO_PRECIO_S");
             xxqpPdftBpoPrecioVORowImpl.setId(numBpoPrecioId);
             xxqpPdftBpoPrecioVORowImpl.setBpoHeaderId(numBpoHeaderId);
             xxqpPdftBpoPrecioVOImpl.insertRow(xxqpPdftBpoPrecioVORowImpl);
            
             oADBTransaction.commit();
         } /** END  if(null!=xxqpPdftBpoPrecioVOImpl){ **/
    } /** END  public void insertXxqpPdftBpoPrecioVO() { **/
    
    public void refreshXxqpPdftBpoPrecioVO(){
        XxqpPdftBpoPrecioVOImpl xxqpPdftBpoPrecioVOImpl = getXxqpPdftBpoPrecioVO1();
        XxqpPdftBpoPrecioVORowImpl xxqpPdftBpoPrecioVORowImpl = null; 
        if(null!=xxqpPdftBpoPrecioVOImpl){
          RowSetIterator  pdftBpoPrecioIteartor  = xxqpPdftBpoPrecioVOImpl.createRowSetIterator(null);
          while(pdftBpoPrecioIteartor.hasNext()){
            xxqpPdftBpoPrecioVORowImpl = (XxqpPdftBpoPrecioVORowImpl)pdftBpoPrecioIteartor.next();
             if(null!=xxqpPdftBpoPrecioVORowImpl.getCantidad()&&null!=xxqpPdftBpoPrecioVORowImpl.getPrecioUnitario()){
              xxqpPdftBpoPrecioVORowImpl.setTotalConcepto(xxqpPdftBpoPrecioVORowImpl.getCantidad().multiply(xxqpPdftBpoPrecioVORowImpl.getPrecioUnitario()));
             }
              this.getOADBTransaction().commit();
          }
          pdftBpoPrecioIteartor.closeRowSetIterator();
        }
    } /** END public void refreshXxqpPdftBpoPrecioVO(){ **/
    
     public String enviaCorreos(InputStream pInputStream
                               ,oracle.jbo.domain.Number pNumeroFtRef
                               ,String pStatusFT
                               ,oracle.jbo.domain.Number pNumeroFt
                               ,OAPageContext pageContext
                               ,String pStrNombreCliente
                               ,String pArticuloOracle
                               ,XxqpPdftBpoHeaderVORowImpl pXxqpPdftBpoHeaderVORowImpl
                               ) {
         pageContext.writeDiagnostics(this,"Entra enviaCorreos",OAFwkConstants.STATEMENT);
         String retval = null;
         OADBTransaction  oADBTransaction = this.getOADBTransaction();
         String strCrearFlag = "N"; 
         String strActualizarFlag = "N"; 
         oracle.jbo.domain.Number ref = new oracle.jbo.domain.Number(0);
         String strNumeroFt = ""; 
         if(null!=pNumeroFt){
             strNumeroFt = pNumeroFt.toString();
         }
         String strSubject =""; 
         String strBody="";
         MessageToken[] msgtoken1 = {new MessageToken("NO_FT",strNumeroFt)};
         MessageToken[] msgtoken2 = {new MessageToken("NO_FT",strNumeroFt)
                                   , new MessageToken("NOMBRE_CLIENTE",pStrNombreCliente)
                                   , new MessageToken("RAZON_SOCIAL",pXxqpPdftBpoHeaderVORowImpl.getRazonSocial())
                                   , new MessageToken("PRODUCT_ID",pArticuloOracle)
                                   };
         
         if(ref.compareTo(pNumeroFtRef)!=0&&"CAMBIO_DE_PRECIO".equals(pStatusFT)){
             strActualizarFlag = "Y";
             strSubject = pageContext.getMessage("XXQP","XXQP_PDFT_CAMBI_FT_SUBJECT_MSG",msgtoken1);
             strBody = pageContext.getMessage("XXQP","XXQP_PDFT_CAMBIO_FT_BODY_MSG",msgtoken2);
             strBody = strBody+"\n\nMODIFICACIONES REALIZADAS:\n";
             if(null!=pXxqpPdftBpoHeaderVORowImpl.getModifRealiz()){
                 strBody = strBody+pXxqpPdftBpoHeaderVORowImpl.getModifRealiz().toString();
             }            
         }else if(ref.compareTo(pNumeroFtRef)==0){
             strCrearFlag = "Y";
             strSubject = pageContext.getMessage("XXQP","XXQP_PDFT_ALTA_FT_SUBJECT_MSG",msgtoken1);
             strBody = pageContext.getMessage("XXQP","XXQP_PDFT_ALTA_FT_BODY_MSG",msgtoken2);
         }else{
             strCrearFlag = "Y";
             strSubject = pageContext.getMessage("XXQP","XXQP_PDFT_ALTA_FT_SUBJECT_MSG",msgtoken1);
             strBody = pageContext.getMessage("XXQP","XXQP_PDFT_ALTA_FT_BODY_MSG",msgtoken2);
         }
         
         
         Connection connection =   oADBTransaction.getJdbcConnection();
           String strPrepStmt = " SELECT ID                     \n" + 
                                "        ,RESPONSABILIDAD   \n" + 
                                "        ,USUARIO               \n" + 
                                "        ,AREA                  \n" + 
                                "        ,CORREO               \n" + 
                                "        ,IS_ENABLED               \n" + 
                                "        ,CREATED_BY               \n" + 
                                "        ,CREATION_DATE          \n" + 
                                "        ,LAST_UPDATED_BY        \n" + 
                                "        ,LAST_UPDATE_DATE      \n" + 
                                "        ,LAST_UPDATE_LOGIN     \n" + 
                                "        ,ATTRIBUTE_CATEGORY    \n" + 
                                "        ,ATTRIBUTE1            \n" + 
                                "        ,ATTRIBUTE2            \n" + 
                                "        ,ATTRIBUTE3            \n" + 
                                "        ,ATTRIBUTE4            \n" + 
                                "        ,ATTRIBUTE5            \n" + 
                                " FROM  XXQP_PDFT_DISTRIBUCION\n" + 
                                " WHERE IS_ENABLED = 'Y' ";
               if("Y".equals(strCrearFlag)){
                   strPrepStmt =strPrepStmt+" AND ATTRIBUTE1 ='Y'";
               }else if("Y".equals(strActualizarFlag)){
                   strPrepStmt =strPrepStmt+" AND ATTRIBUTE2 ='Y'";
               }
            
               int count = 0; 
               PreparedStatement prepStmt = null;
               ResultSet resultSet = null;
               try
               {
                 prepStmt = connection.prepareStatement(strPrepStmt,ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                 resultSet = prepStmt.executeQuery();
               
                 while(resultSet.next()){
                     String strCorreo = null; 
                     strCorreo = resultSet.getString("CORREO");  
                     if(count>0){
                         retval = retval+","+strCorreo;
                     }else if(count==0){
                         retval = strCorreo; 
                     }
                    count = count +1; 
                }
                 
              } catch (SQLException sqle)
              {
               throw new OAException("EXCEPTION metodo enviaCorreos clase BpoAMImpl:"+sqle.getErrorCode()+" , "+sqle.getMessage(),OAException.ERROR);
              }
              finally{
                closeResultSet(resultSet);
                closePreparedStatement(prepStmt);
              }
          
        
         java.util.Map<String,String> map = new java.util.HashMap<String,String>();
         map.put("Responsablidad",""); 
         map.put("Usuario",""); 
         map.put("Area",""); 
         map.put("Correo",retval); 
         map.put("strSubject",strSubject);
         map.put("strBody",strBody);
         map.put("strCrearFlag",strCrearFlag);
         map.put("strNumeroFt",strNumeroFt);
         
         if(count>0){
         testDeliveryManager(pInputStream,map,pXxqpPdftBpoHeaderVORowImpl);
         }
          return retval; 
          
     }
     
     private void testDeliveryManager(InputStream inputStream, 
                                      Map<String, String> map,
                                      XxqpPdftBpoHeaderVORowImpl pXxqpPdftBpoHeaderVORowImpl) {
         System.out.println("Entra testDeliveryManager.");
         DeliveryManager deliveryManager = null;
         DeliveryRequest deliveryRequest = null; 
         String strCorreo = map.get("Correo");
         String strSubject = map.get("strSubject"); 
         String strBody = map.get("strBody"); 
         String strCrearFlag = map.get("strCrearFlag"); 
         String strNumeroFt = map.get("strNumeroFt"); 
         String strCancelFlag = map.get("strCancelFlag");
         /**********************************************************************
          *04102019
         try {
             deliveryManager = new DeliveryManager();
             deliveryRequest = deliveryManager.createRequest(DeliveryManager.TYPE_SMTP_EMAIL);
             deliveryRequest.addProperty(DeliveryPropertyDefinitions.SMTP_SUBJECT,"Test Delivery Manager");
             deliveryRequest.addProperty(DeliveryPropertyDefinitions.SMTP_HOST,"mail.qualitypost.com.mx");
             deliveryRequest.addProperty(DeliveryPropertyDefinitions.SMTP_PORT,"1825");
             deliveryRequest.addProperty(DeliveryPropertyDefinitions.SMTP_FROM,BpoAMImpl.strXxqpPdftEmail);
             deliveryRequest.addProperty(DeliveryPropertyDefinitions.SMTP_USERNAME,BpoAMImpl.strXxqpPdftEmail);
             deliveryRequest.addProperty(DeliveryPropertyDefinitions.SMTP_PASSWORD,BpoAMImpl.strXxqpPdftEmailPwd);
             deliveryRequest.addProperty(DeliveryPropertyDefinitions.SMTP_TO_RECIPIENTS,strCorreo);
             deliveryRequest.addProperty(DeliveryPropertyDefinitions.SMTP_CONTENT_FILENAME,"AltaFichaTecnicaBpo.pdf");
             deliveryRequest.addProperty(DeliveryPropertyDefinitions.SMTP_CONTENT_TYPE,"application/pdf");
             deliveryRequest.setDocument(inputStream);
             deliveryRequest.submit(); 
             deliveryRequest.close();
         } catch (InvalidFactoryException e) {
            System.out.println("InvalidFactoryException:"+e.getMessage());
         } catch (UndefinedRequestTypeException e) {
             System.out.println("UndefinedRequestTypeException:"+e.getMessage());
         } catch (DeliveryException e) {
              System.out.println("DeliveryException:"+e.getMessage()+", "+e.getCause());
         }        
         ***********************************************************************/
          Properties properties =System.getProperties();
          properties.put("mail.smtp.auth","true");
          properties.put("mail.smtp.starttls.enable","true");
          properties.put("mail.smtp.host","mail.qualitypost.com.mx");
          properties.put("mail.smtp.port","465");
          properties.put("mail.smtp.socketFactory.port", "465"); /*SSL Port*/
          properties.put("mail.smtp.socketFactory.class","javax.net.ssl.SSLSocketFactory"); /*SSL Factory Class*/
          
          strXxqpPdftEmail = this.getOADBTransaction().getProfile("XXQP_PDFT_EMAIL"); 
          strXxqpPdftEmailPwd = this.getOADBTransaction().getProfile("XXQP_PDFT_EMAIL_PWD");
          
          Session session = Session.getInstance(properties,new javax.mail.Authenticator(){
                                                          protected javax.mail.PasswordAuthentication getPasswordAuthentication(){
                                                           return new javax.mail.PasswordAuthentication (BpoAMImpl.strXxqpPdftEmail,BpoAMImpl.strXxqpPdftEmailPwd);
                                                          }
                                                          }
                                                 );
          /** session.setDebug(true); 120320211620 Debug muy grande **/
          Message message = new MimeMessage(session);
          try {
              message.setFrom( new InternetAddress(BpoAMImpl.strXxqpPdftEmail));
              message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(strCorreo));
              message.setSubject(strSubject);
              /* Create the message part */
                       BodyPart messageBodyPart = new MimeBodyPart();
              /* Now set the actual message */
                       messageBodyPart.setText(strBody);
              /* Create a multipar message */
                       Multipart multipart = new MimeMultipart();
                       /* Set text message part */
                       multipart.addBodyPart(messageBodyPart);
                       // Part two is attachment
                       messageBodyPart = new MimeBodyPart();
                       DataSource source = null; /**new FileDataSource(filename); **/
                         try {
                             source = new ByteArrayDataSource(inputStream,"application/pdf");
                         } catch (IOException e) {
                              throw new OAException("inputStream to ByteArrayDataSource testDeliveryManager BPO:"+e.getMessage(),OAException.ERROR);
                         }
                       messageBodyPart.setDataHandler(new DataHandler(source));
                      if("Y".equals(strCancelFlag)){
                          messageBodyPart.setFileName("CancelacionFichaTecnicaBpo"+strNumeroFt+".pdf");
                      }else{
                          if("Y".equals(strCrearFlag)){
                            messageBodyPart.setFileName("AltaFichaTecnicaBpo"+strNumeroFt+".pdf");
                          }else{
                            messageBodyPart.setFileName("CambioFichaTecnicaBpo"+strNumeroFt+".pdf");
                          }
                      }
                       multipart.addBodyPart(messageBodyPart);
              // Part three is attachment
               if(null!=pXxqpPdftBpoHeaderVORowImpl.getContratoFileName()&&!"".equals(pXxqpPdftBpoHeaderVORowImpl.getContratoFileName())){
                   if(null!=pXxqpPdftBpoHeaderVORowImpl.getContratoFile()){
                     if(pXxqpPdftBpoHeaderVORowImpl.getContratoFile().getLength()>0){
                    try {
                        addAttachment(multipart
                                        ,pXxqpPdftBpoHeaderVORowImpl.getContratoFile().getInputStream()
                                        ,pXxqpPdftBpoHeaderVORowImpl.getContratoFileName()
                                        ,pXxqpPdftBpoHeaderVORowImpl.getContratoContentType()
                                       );
                    } catch (IOException e) {
                       System.out.println("Exception Contrato:"+e.getMessage());
                       throw new OAException("Exception Contrato:"+e.getMessage(),OAException.ERROR); 
                    }
                  }
                 }
               }
               
              if(null!=pXxqpPdftBpoHeaderVORowImpl.getFileName1()&&!"".equals(pXxqpPdftBpoHeaderVORowImpl.getFileName1())){
                  if(null!=pXxqpPdftBpoHeaderVORowImpl.getFile1()){
                    if(pXxqpPdftBpoHeaderVORowImpl.getFile1().getLength()>0){
                   try {
                       addAttachment(multipart
                                       ,pXxqpPdftBpoHeaderVORowImpl.getFile1().getInputStream()
                                       ,pXxqpPdftBpoHeaderVORowImpl.getFileName1()
                                       ,pXxqpPdftBpoHeaderVORowImpl.getContentType1()
                                      );
                   } catch (IOException e) {
                      System.out.println("Exception File 1:"+e.getMessage());
                      throw new OAException("Exception File 1:"+e.getMessage(),OAException.ERROR); 
                   }
                 }
                }
              }
              
              if(null!=pXxqpPdftBpoHeaderVORowImpl.getFileName2()&&!"".equals(pXxqpPdftBpoHeaderVORowImpl.getFileName2())){
                  if(null!=pXxqpPdftBpoHeaderVORowImpl.getFile2()){
                    if(pXxqpPdftBpoHeaderVORowImpl.getFile2().getLength()>0){
                   try {
                       addAttachment(multipart
                                       ,pXxqpPdftBpoHeaderVORowImpl.getFile2().getInputStream()
                                       ,pXxqpPdftBpoHeaderVORowImpl.getFileName2()
                                       ,pXxqpPdftBpoHeaderVORowImpl.getContentType2()
                                      );
                   } catch (IOException e) {
                      System.out.println("Exception File 2:"+e.getMessage());
                      throw new OAException("Exception File 2:"+e.getMessage(),OAException.ERROR); 
                   }
                 }
                }
              }
              
              if(null!=pXxqpPdftBpoHeaderVORowImpl.getFileName3()&&!"".equals(pXxqpPdftBpoHeaderVORowImpl.getFileName3())){
                  if(null!=pXxqpPdftBpoHeaderVORowImpl.getFile3()){
                    if(pXxqpPdftBpoHeaderVORowImpl.getFile3().getLength()>0){
                   try {
                       addAttachment(multipart
                                       ,pXxqpPdftBpoHeaderVORowImpl.getFile3().getInputStream()
                                       ,pXxqpPdftBpoHeaderVORowImpl.getFileName3()
                                       ,pXxqpPdftBpoHeaderVORowImpl.getContentType3()
                                      );
                   } catch (IOException e) {
                      System.out.println("Exception File 3:"+e.getMessage());
                      throw new OAException("Exception File 3:"+e.getMessage(),OAException.ERROR); 
                   }
                  }
                }
              }
                       // Send the complete message parts
                       message.setContent(multipart);
              
              Transport.send(message);
          } catch (MessagingException me) {
              me.printStackTrace();
              System.out.println("MessagingException:"+me.getMessage());
              throw new OAException("MessagingException:"+me.getMessage(),OAException.ERROR); 
          }
          
         System.out.println("Sale testDeliveryManager."); 
     }

    public Number obtieneSubtotal() {
     PrecioTmpVOImpl  precioTmpVOImpl = this.getPrecioTmpVO1(); 
     PrecioTmpVORowImpl precioTmpVORowImpl = null; 
     oracle.jbo.domain.Number retval = new oracle.jbo.domain.Number(0); 
     RowSetIterator iterator = precioTmpVOImpl.createRowSetIterator(null);
     while(iterator.hasNext()){
       precioTmpVORowImpl = (PrecioTmpVORowImpl)iterator.next(); 
       if(null!=precioTmpVORowImpl.getTotalPorConcepto()){
           retval = retval.add(precioTmpVORowImpl.getTotalPorConcepto());
       }
     }
     iterator.closeRowSetIterator();
     
     return retval;      
          
    }

    public void fillSubTotal() {
    XxqpPdftBpoPrecioVOImpl xxqpPdftBpoPrecioVOImpl = this.getXxqpPdftBpoPrecioVO1(); 
    XxqpPdftBpoPagoVOImpl xxqpPdftBpoPagoVOImpl  = this.getXxqpPdftBpoPagoVO1(); 
    XxqpPdftBpoPrecioVORowImpl xxqpPdftBpoPrecioVORowImpl = null; 
    XxqpPdftBpoPagoVORowImpl xxqpPdftBpoPagoVORowImpl = null; 
    oracle.jbo.domain.Number numSubtotal = new oracle.jbo.domain.Number(0);
    RowSetIterator precioIterator =  xxqpPdftBpoPrecioVOImpl.createRowSetIterator(null);
    while(precioIterator.hasNext()){
       xxqpPdftBpoPrecioVORowImpl = (XxqpPdftBpoPrecioVORowImpl)precioIterator.next();
       if(null!=xxqpPdftBpoPrecioVORowImpl.getTotalConcepto()){
           numSubtotal = numSubtotal.add(xxqpPdftBpoPrecioVORowImpl.getTotalConcepto());
       }
    }
    precioIterator.closeRowSetIterator();
    
    oracle.jbo.domain.Number numIva = numSubtotal.multiply(0.16d);
    
    RowSetIterator PagoIterator = xxqpPdftBpoPagoVOImpl.createRowSetIterator(null);
    while(PagoIterator.hasNext()){
       xxqpPdftBpoPagoVORowImpl = (XxqpPdftBpoPagoVORowImpl)PagoIterator.next();
       break;
    }
    PagoIterator.next();
    System.out.println("xxqpPdftBpoPagoVORowImpl");
    System.out.println(xxqpPdftBpoPagoVORowImpl);
    if(null!=xxqpPdftBpoPagoVORowImpl){
    xxqpPdftBpoPagoVORowImpl.setSubtotal(numSubtotal);
    xxqpPdftBpoPagoVORowImpl.setIva(numIva);
    xxqpPdftBpoPagoVORowImpl.setTotal(numSubtotal.add(numIva));
    }   
    
    }

    public String getUnidadNegocioM(String pStrPUnidadDeNegocio) {
        String retval = null;
        OADBTransaction  oADBTransaction = this.getOADBTransaction();

        Connection connection =   oADBTransaction.getJdbcConnection();
          String strPrepStmt = " select  lookup_code " + 
                               "         ,description meaning " + 
                               "   from xxqp_pdft_mgr_catalogos " + 
                               " where lookup_type = 'UNIDAD_DE_NEGOCIO' " + 
                               "   and nvl(status,'X') = 'Y' " +
                               "   and lookup_code = ?";

           
              PreparedStatement prepStmt = null;
              ResultSet resultSet = null;
              try
              {
                prepStmt = connection.prepareStatement(strPrepStmt,ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                prepStmt.setString(1,pStrPUnidadDeNegocio);
                resultSet = prepStmt.executeQuery();
                while(resultSet.next()){
                    retval = resultSet.getString("meaning");       
                }
                
              } catch (SQLException sqle)
              {
               throw new OAException("EXCEPTION metodo getUnidadNegocioM clase BpoAMImpl:"+sqle.getErrorCode()+" , "+sqle.getMessage(),OAException.ERROR);
              }
              finally{
              closeResultSet(resultSet);
              closePreparedStatement(prepStmt);
              }
         return retval; 
         
    }

    /**Container's getter for MtlSystemItemsBLOV1
     */
    public MtlSystemItemsBLOVImpl getMtlSystemItemsBLOV1() {
        return (MtlSystemItemsBLOVImpl)findViewObject("MtlSystemItemsBLOV1");
    }

    /**Container's getter for ReglasDeNegocioTmpVO1
     */
    public ReglasDeNegocioTmpVOImpl getReglasDeNegocioTmpVO1() {
        return (ReglasDeNegocioTmpVOImpl)findViewObject("ReglasDeNegocioTmpVO1");
    }

    /**Container's getter for XxqpPdftBpoRegNegVO1
     */
    public XxqpPdftBpoRegNegVOImpl getXxqpPdftBpoRegNegVO1() {
        return (XxqpPdftBpoRegNegVOImpl)findViewObject("XxqpPdftBpoRegNegVO1");
    }

    /**Container's getter for XxqpPdftBpoEstadosVO1
     */
    public XxqpPdftBpoEstadosVOImpl getXxqpPdftBpoEstadosVO1() {
        return (XxqpPdftBpoEstadosVOImpl)findViewObject("XxqpPdftBpoEstadosVO1");
    }

    /**Container's getter for XxqpPdftBpoConceptosVO1
     */
    public XxqpPdftBpoConceptosVOImpl getXxqpPdftBpoConceptosVO1() {
        return (XxqpPdftBpoConceptosVOImpl)findViewObject("XxqpPdftBpoConceptosVO1");
    }

    public void createRowRegNeg() {
        ReglasDeNegocioTmpVOImpl reglasDeNegocioTmpVOImpl =getReglasDeNegocioTmpVO1(); 
        if(!reglasDeNegocioTmpVOImpl.isPreparedForExecution()){
            reglasDeNegocioTmpVOImpl.executeQuery();
          }
          reglasDeNegocioTmpVOImpl.setMaxFetchSize(0);
          reglasDeNegocioTmpVOImpl.last();   // Go to the last Row of the VO
          System.out.println(reglasDeNegocioTmpVOImpl.getCurrentRow());
          oracle.jbo.domain.Number IdNum = null; 
          if(null==reglasDeNegocioTmpVOImpl.getCurrentRow()){
              IdNum = new  oracle.jbo.domain.Number(0);
          }else{
             String idNumTmp = reglasDeNegocioTmpVOImpl.getCurrentRow().getAttribute("Id").toString(); 
              IdNum = new oracle.jbo.domain.Number(Integer.parseInt(idNumTmp)+1);
          }
           reglasDeNegocioTmpVOImpl.next();
           ReglasDeNegocioTmpVORowImpl reglasDeNegocioTmpRowVOImpl = (ReglasDeNegocioTmpVORowImpl)reglasDeNegocioTmpVOImpl.createRow(); 
           reglasDeNegocioTmpRowVOImpl.setId(IdNum);
           reglasDeNegocioTmpVOImpl.insertRow(reglasDeNegocioTmpRowVOImpl);
    }

    public void deleteRowRegNeg(String strDeleteRegNegId) {
        ReglasDeNegocioTmpVOImpl reglasDeNegocioTmpVOImpl =getReglasDeNegocioTmpVO1(); 
        Row[] row = reglasDeNegocioTmpVOImpl.getFilteredRows("Id",strDeleteRegNegId);
        System.out.println("Total Rows: "+reglasDeNegocioTmpVOImpl.getRowCount());
        System.out.println("Selected Rows: "+row.length);
       for (int i=0;i<row.length;i++){
            ReglasDeNegocioTmpVORowImpl reglasDeNegocioTmpVORowImpl = null; 
            reglasDeNegocioTmpVORowImpl = (ReglasDeNegocioTmpVORowImpl)row[i];
            reglasDeNegocioTmpVORowImpl.remove();
        }
    }
    
    public void fillReglasDeNegocio(StringBuilder strBpoHeaderId) {
            oracle.jbo.domain.Number numBpoHeaderId=null;
            try {
               if(null!=strBpoHeaderId){
                numBpoHeaderId = new oracle.jbo.domain.Number(strBpoHeaderId.toString());
               }
            } catch (SQLException sqle) {
                throw new OAException("SQLException metodo fillReglasDeNegocio parametro strBpoHeaderId:"+strBpoHeaderId,OAException.ERROR); 
            }
            
            OADBTransaction oADBTransaction =this.getOADBTransaction();     
            XxqpPdftBpoRegNegVOImpl XxqpPdftBpoRegNegVOImpl = getXxqpPdftBpoRegNegVO1(); 
            ReglasDeNegocioTmpVOImpl reglasDeNegocioTmpVOImpl = getReglasDeNegocioTmpVO1();
            
            RowSetIterator rowSetIterator = reglasDeNegocioTmpVOImpl.createRowSetIterator(null);
            while(rowSetIterator.hasNext()){
                ReglasDeNegocioTmpVORowImpl reglasDeNegocioTmpVORowImpl = null; 
                reglasDeNegocioTmpVORowImpl = (ReglasDeNegocioTmpVORowImpl)rowSetIterator.next(); 
                
                    if((null!=reglasDeNegocioTmpVORowImpl.getEstadoCode()&&!"".equals(reglasDeNegocioTmpVORowImpl.getEstadoCode()))
                       &&(null!=reglasDeNegocioTmpVORowImpl.getConceptoCode()&&!"".equals(reglasDeNegocioTmpVORowImpl.getConceptoCode()))
                       ){
                        if(null!=XxqpPdftBpoRegNegVOImpl){
                            if(!XxqpPdftBpoRegNegVOImpl.isPreparedForExecution()){
                               XxqpPdftBpoRegNegVOImpl.executeQuery();
                            }
                    XxqpPdftBpoRegNegVORowImpl XxqpPdftBpoRegNegVORowImpl = null; 
                    XxqpPdftBpoRegNegVORowImpl = (XxqpPdftBpoRegNegVORowImpl)XxqpPdftBpoRegNegVOImpl.createRow();
                    oracle.jbo.domain.Number regNegID = oADBTransaction.getSequenceValue("XXQP_PDFT_BPO_REG_NEG_S");
                    XxqpPdftBpoRegNegVORowImpl.setId(regNegID); 
                    XxqpPdftBpoRegNegVORowImpl.setBpoHeaderId(numBpoHeaderId);
                    XxqpPdftBpoRegNegVORowImpl.setEstadoCode(reglasDeNegocioTmpVORowImpl.getEstadoCode());
                    XxqpPdftBpoRegNegVORowImpl.setConceptoCode(reglasDeNegocioTmpVORowImpl.getConceptoCode());
                    XxqpPdftBpoRegNegVORowImpl.setPrecio(reglasDeNegocioTmpVORowImpl.getPrecio());
                    XxqpPdftBpoRegNegVOImpl.insertRow(XxqpPdftBpoRegNegVORowImpl);
                    oADBTransaction.commit();
                    }
                } /** END IF**/
            } /** END WHILE **/
            rowSetIterator.closeRowSetIterator();
            
        }

    public void initReglasDeNegocioVO(String strBpoHeaderId) {
        oracle.jbo.domain.Number numBpoHeaderId=null;
        try {
            numBpoHeaderId = new oracle.jbo.domain.Number(strBpoHeaderId);
        } catch (SQLException sqle) {
            throw new OAException("SQLException metodo initMypCoberturaVO parametro pStrClientesHeaderId",OAException.ERROR); 
        }
        XxqpPdftBpoRegNegVOImpl xxqpPdftBpoRegNegVOImpl = getXxqpPdftBpoRegNegVO1();
        if(null!=xxqpPdftBpoRegNegVOImpl){
            xxqpPdftBpoRegNegVOImpl.initByBpoHeaderId(numBpoHeaderId);
        }
    
    }

    public void createRowRegNegUpd(oracle.jbo.domain.Number pBpoHeaderId) {
        OADBTransaction oADBTransaction =this.getOADBTransaction();   
        XxqpPdftBpoRegNegVOImpl xxqpPdftBpoRegNegVOImpl = getXxqpPdftBpoRegNegVO1();
        if(!xxqpPdftBpoRegNegVOImpl.isPreparedForExecution()){
            xxqpPdftBpoRegNegVOImpl.executeQuery();
          }
          xxqpPdftBpoRegNegVOImpl.setMaxFetchSize(0);
          xxqpPdftBpoRegNegVOImpl.last();   // Go to the last Row of the VO
          System.out.println(xxqpPdftBpoRegNegVOImpl.getCurrentRow());
          oracle.jbo.domain.Number IdNum = null; 
          IdNum = oADBTransaction.getSequenceValue("XXQP_PDFT_BPO_REG_NEG_S");
          xxqpPdftBpoRegNegVOImpl.next();
          XxqpPdftBpoRegNegVORowImpl xxqpPdftBpoRegNegVORowImpl = (XxqpPdftBpoRegNegVORowImpl)xxqpPdftBpoRegNegVOImpl.createRow(); 
          xxqpPdftBpoRegNegVORowImpl.setId(IdNum);
          xxqpPdftBpoRegNegVORowImpl.setBpoHeaderId(pBpoHeaderId);
          xxqpPdftBpoRegNegVOImpl.insertRow(xxqpPdftBpoRegNegVORowImpl);
          /** oADBTransaction.commit(); **/
    }

    public void deleteRowRegNegUpd(String strDeleteRegNegId) {
        OADBTransaction oADBTransaction =this.getOADBTransaction();   
        XxqpPdftBpoRegNegVOImpl xxqpPdftBpoRegNegVOImpl = getXxqpPdftBpoRegNegVO1();
        Row[] row = xxqpPdftBpoRegNegVOImpl.getFilteredRows("Id",strDeleteRegNegId);
        System.out.println("Total Rows: "+xxqpPdftBpoRegNegVOImpl.getRowCount());
        System.out.println("Selected Rows: "+row.length);
        for (int i=0;i<row.length;i++){
            XxqpPdftBpoRegNegVORowImpl xxqpPdftBpoRegNegVORowImpl = null; 
            xxqpPdftBpoRegNegVORowImpl = (XxqpPdftBpoRegNegVORowImpl)row[i];
            xxqpPdftBpoRegNegVORowImpl.remove();
        }
        /**oADBTransaction.commit();**/
    }

    public void initEstadosLov(String pStrSvPartyId
                             , String pStrSearchText) {
        XxqpPdftBpoEstadosVOImpl xxqpPdftBpoEstadosVOImpl = getXxqpPdftBpoEstadosVO1(); 
       xxqpPdftBpoEstadosVOImpl.setWhereClause(" attribute1='"+pStrSvPartyId+"'");
       xxqpPdftBpoEstadosVOImpl.executeQuery();
       int count =0;
       while(xxqpPdftBpoEstadosVOImpl.hasNext()){
           xxqpPdftBpoEstadosVOImpl.next();
           count = count+1;
           if(10==count){
             break;
           }
       }
    }

    public void initConceptosLov(String pStrSvPartyId
                               , String pStrSearchText) {
               XxqpPdftBpoConceptosVOImpl xxqpPdftBpoConceptosVOImpl = getXxqpPdftBpoConceptosVO1(); 
               xxqpPdftBpoConceptosVOImpl.setWhereClause(" attribute1='"+pStrSvPartyId+"'");
               xxqpPdftBpoConceptosVOImpl.executeQuery();
               int count =0;
               while(xxqpPdftBpoConceptosVOImpl.hasNext()){
                   xxqpPdftBpoConceptosVOImpl.next();
                   count = count+1;
                   if(10==count){
                     break;
                   }
               }
    }
    
    public String getCamposRequeridosByUnidadDeNegocio(String pStrUnidadDeNegocioValue) {
        String retval = "";
        OADBTransaction  oADBTransaction = this.getOADBTransaction();
        Connection connection =   oADBTransaction.getJdbcConnection();
        String strPrepStmt = " SELECT XxqpPdftMgrCatalogosEO.ATTRIBUTE3\r" + 
                             "   FROM XXQP_PDFT_MGR_CATALOGOS XxqpPdftMgrCatalogosEO\r" + 
                             " WHERE LOOKUP_TYPE = 'UNIDAD_DE_NEGOCIO'\r" + 
                             "    AND STATUS = 'Y'\r" + 
                             "    AND LOOKUP_CODE = '"+pStrUnidadDeNegocioValue+"'";
        PreparedStatement prepStmt = null;
        ResultSet resultSet = null;
        try
        {
          prepStmt = connection.prepareStatement(strPrepStmt,ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
          resultSet = prepStmt.executeQuery();
          int count = 0; 
          while(resultSet.next()){
            retval = resultSet.getString("ATTRIBUTE3");  
         }
          
        } catch (SQLException sqle)
        {
        throw new OAException("EXCEPTION metodo getCamposRequeridosByUnidadDeNegocio clase BpoAMImpl:"+sqle.getErrorCode()+" , "+sqle.getMessage(),OAException.ERROR);
        }
        finally{
         closeResultSet(resultSet);
         closePreparedStatement(prepStmt);
        }
        return retval; 
    }
    
    public String getPrefijoByUnidadDeNegocio(String pStrUnidadDeNegocioValue) {
        String retval = "";
        OADBTransaction  oADBTransaction = this.getOADBTransaction();
        Connection connection =   oADBTransaction.getJdbcConnection();
        String strPrepStmt = " SELECT XxqpPdftMgrCatalogosEO.ATTRIBUTE2\r" + 
                             "   FROM XXQP_PDFT_MGR_CATALOGOS XxqpPdftMgrCatalogosEO\r" + 
                             " WHERE LOOKUP_TYPE = 'UNIDAD_DE_NEGOCIO'\r" + 
                             "    AND STATUS = 'Y'\r" + 
                             "    AND LOOKUP_CODE = '"+pStrUnidadDeNegocioValue+"'";
        PreparedStatement prepStmt = null;
        ResultSet resultSet = null;
        try
        {
          prepStmt = connection.prepareStatement(strPrepStmt,ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
          resultSet = prepStmt.executeQuery();
          int count = 0; 
          while(resultSet.next()){
            retval = resultSet.getString("ATTRIBUTE2");  
         }
          
        } catch (SQLException sqle)
        {
        throw new OAException("EXCEPTION metodo getPrefijoByUnidadDeNegocio clase BpoAMImpl:"+sqle.getErrorCode()+" , "+sqle.getMessage(),OAException.ERROR);
        }
        finally{
         closeResultSet(resultSet);
         closePreparedStatement(prepStmt);
        }
        return retval; 
    }
    
    /**
     * 13092021 
     * Se valida en content type para evitar exepciones
     * @param pMultipart
     * @param pInputStream
     * @param pFilename
     * @param pContentType
     * @throws IOException
     * @throws MessagingException
     */
    private static void addAttachment(Multipart pMultipart
                                     ,InputStream pInputStream
                                     ,String pFilename
                                     ,String pContentType) throws IOException, 
                                                              MessagingException {
        if(null!=pContentType&&!"".equals(pContentType)){
            DataSource source = new ByteArrayDataSource(pInputStream,pContentType);
            BodyPart messageBodyPart = new MimeBodyPart();        
            messageBodyPart.setDataHandler(new DataHandler(source));
            messageBodyPart.setFileName(pFilename);
            pMultipart.addBodyPart(messageBodyPart);
            if(null!=pInputStream){
                pInputStream.close();
            }
        }
    }

    public void createRowRegNeg(String[] pAttributes) {
        ReglasDeNegocioTmpVOImpl reglasDeNegocioTmpVOImpl =getReglasDeNegocioTmpVO1(); 
        if(!reglasDeNegocioTmpVOImpl.isPreparedForExecution()){
            reglasDeNegocioTmpVOImpl.executeQuery();
          }
          reglasDeNegocioTmpVOImpl.setMaxFetchSize(0);
          reglasDeNegocioTmpVOImpl.last();   // Go to the last Row of the VO
          System.out.println(reglasDeNegocioTmpVOImpl.getCurrentRow());
          oracle.jbo.domain.Number IdNum = null; 
          if(null==reglasDeNegocioTmpVOImpl.getCurrentRow()){
              IdNum = new  oracle.jbo.domain.Number(0);
          }else{
             String idNumTmp = reglasDeNegocioTmpVOImpl.getCurrentRow().getAttribute("Id").toString(); 
              IdNum = new oracle.jbo.domain.Number(Integer.parseInt(idNumTmp)+1);
          }
           reglasDeNegocioTmpVOImpl.next();
           ReglasDeNegocioTmpVORowImpl reglasDeNegocioTmpRowVOImpl = (ReglasDeNegocioTmpVORowImpl)reglasDeNegocioTmpVOImpl.createRow(); 
           reglasDeNegocioTmpRowVOImpl.setId(IdNum);
           reglasDeNegocioTmpRowVOImpl.setEstadoMeaning(pAttributes[0]);
           reglasDeNegocioTmpRowVOImpl.setConceptoMeaning(pAttributes[1]);
           oracle.jbo.domain.Number nPrecio=null;
            try {
                nPrecio = new oracle.jbo.domain.Number(pAttributes[2]);
            } catch (SQLException e) {
                e.printStackTrace();
            }
           reglasDeNegocioTmpRowVOImpl.setPrecio(nPrecio);
           reglasDeNegocioTmpVOImpl.insertRow(reglasDeNegocioTmpRowVOImpl);
    }

    public void deleteAllRowRegNeg() {
        ReglasDeNegocioTmpVOImpl reglasDeNegocioTmpVOImpl =getReglasDeNegocioTmpVO1(); 
        if(null!=reglasDeNegocioTmpVOImpl){
           RowSetIterator iter =  reglasDeNegocioTmpVOImpl.createRowSetIterator(null);
           while(iter.hasNext()){
               ReglasDeNegocioTmpVORowImpl reglasDeNegocioTmpVORowImpl = null; 
               reglasDeNegocioTmpVORowImpl = (ReglasDeNegocioTmpVORowImpl)iter.next();
               reglasDeNegocioTmpVORowImpl.remove();
           }
        }
    }

    public void deleteAllRowRegNegUpd() {
        OADBTransaction oADBTransaction =this.getOADBTransaction();
        XxqpPdftBpoRegNegVOImpl XxqpPdftBpoRegNegVOImpl = getXxqpPdftBpoRegNegVO1();
              if(null!=XxqpPdftBpoRegNegVOImpl){
                 RowSetIterator iter =  XxqpPdftBpoRegNegVOImpl.createRowSetIterator(null);
                 XxqpPdftBpoRegNegVORowImpl XxqpPdftBpoRegNegVORowImpl = null; 
                 while(iter.hasNext()){
                     XxqpPdftBpoRegNegVORowImpl = (XxqpPdftBpoRegNegVORowImpl)iter.next();
                     XxqpPdftBpoRegNegVORowImpl.remove();
                 }
              }
        /** oADBTransaction.commit() **/       
    }

    public void createRowRegNegUpd(String[] pAttributes
                                  ,oracle.jbo.domain.Number pBpoHeaderId) {
        OADBTransaction oADBTransaction =this.getOADBTransaction();                            
        XxqpPdftBpoRegNegVOImpl XxqpPdftBpoRegNegVOImpl =getXxqpPdftBpoRegNegVO1(); 
        if(!XxqpPdftBpoRegNegVOImpl.isPreparedForExecution()){
        XxqpPdftBpoRegNegVOImpl.executeQuery();
        }
        XxqpPdftBpoRegNegVOImpl.setMaxFetchSize(0);
        XxqpPdftBpoRegNegVOImpl.last();   // Go to the last Row of the VO
        System.out.println(XxqpPdftBpoRegNegVOImpl.getCurrentRow());
        XxqpPdftBpoRegNegVOImpl.next();
        oracle.jbo.domain.Number IdNum = null; 
        IdNum = oADBTransaction.getSequenceValue("XXQP_PDFT_BPO_REG_NEG_S");
        XxqpPdftBpoRegNegVORowImpl reglasDeNegocioTmpRowVOImpl = (XxqpPdftBpoRegNegVORowImpl)XxqpPdftBpoRegNegVOImpl.createRow();
        reglasDeNegocioTmpRowVOImpl.setId(IdNum);
        reglasDeNegocioTmpRowVOImpl.setBpoHeaderId(pBpoHeaderId);
        reglasDeNegocioTmpRowVOImpl.setEstadoMeaning(pAttributes[0]);
        reglasDeNegocioTmpRowVOImpl.setConceptoMeaning(pAttributes[1]);
        oracle.jbo.domain.Number nPrecio=null;
        try {
          nPrecio = new oracle.jbo.domain.Number(pAttributes[2]);
        } catch (SQLException e) {
          // TODO
        }
        reglasDeNegocioTmpRowVOImpl.setPrecio(nPrecio);
        XxqpPdftBpoRegNegVOImpl.insertRow(reglasDeNegocioTmpRowVOImpl);
    }

    public String enviaCorreosReOn(InputStream pInputStream
                               ,oracle.jbo.domain.Number pNumeroFtRef
                               ,String pStatusFT
                               ,oracle.jbo.domain.Number pNumeroFt
                               ,OAPageContext pageContext
                               ,String pStrNombreCliente
                               ,String pArticuloOracle
                               ,XxqpPdftBpoHeaderVORowImpl pXxqpPdftBpoHeaderVORowImpl
                               ,String pStatusMail) {
        pageContext.writeDiagnostics(this,"Entra enviaCorreosReOn",OAFwkConstants.STATEMENT);
        String retval = null;
        OADBTransaction  oADBTransaction = this.getOADBTransaction();
        String strCrearFlag = "N"; 
        String strActualizarFlag = "N"; 
        oracle.jbo.domain.Number ref = new oracle.jbo.domain.Number(0);
        String strNumeroFt = ""; 
        if(null!=pNumeroFt){
            strNumeroFt = pNumeroFt.toString();
        }
        String strSubject =""; 
        String strBody="";
        MessageToken[] msgtoken1 = {new MessageToken("NO_FT",strNumeroFt)};
        MessageToken[] msgtoken2 = {new MessageToken("NO_FT",strNumeroFt)
                                  , new MessageToken("NOMBRE_CLIENTE",pStrNombreCliente)
                                  , new MessageToken("RAZON_SOCIAL",pXxqpPdftBpoHeaderVORowImpl.getRazonSocial())
                                  , new MessageToken("PRODUCT_ID",pArticuloOracle)
                                  };
        
        if("MODIFICACION".equals(pStatusMail)){
            strActualizarFlag = "Y";
            strSubject = pageContext.getMessage("XXQP","XXQP_PDFT_CAMBI_FT_SUBJECT_MSG",msgtoken1);
            strBody = pageContext.getMessage("XXQP","XXQP_PDFT_CAMBIO_FT_BODY_MSG",msgtoken2);
            strBody = strBody+"\n\nMODIFICACIONES REALIZADAS:\n";
            if(null!=pXxqpPdftBpoHeaderVORowImpl.getModifRealiz()){
                strBody = strBody+pXxqpPdftBpoHeaderVORowImpl.getModifRealiz().toString();
            }            
        }else if("ALTA".equals(pStatusMail)){
            strCrearFlag = "Y";
            strSubject = pageContext.getMessage("XXQP","XXQP_PDFT_ALTA_FT_SUBJECT_MSG",msgtoken1);
            strBody = pageContext.getMessage("XXQP","XXQP_PDFT_ALTA_FT_BODY_MSG",msgtoken2);
        }
        
        
        Connection connection =   oADBTransaction.getJdbcConnection();
          String strPrepStmt = " SELECT ID                     \n" + 
                               "        ,RESPONSABILIDAD   \n" + 
                               "        ,USUARIO               \n" + 
                               "        ,AREA                  \n" + 
                               "        ,CORREO               \n" + 
                               "        ,IS_ENABLED               \n" + 
                               "        ,CREATED_BY               \n" + 
                               "        ,CREATION_DATE          \n" + 
                               "        ,LAST_UPDATED_BY        \n" + 
                               "        ,LAST_UPDATE_DATE      \n" + 
                               "        ,LAST_UPDATE_LOGIN     \n" + 
                               "        ,ATTRIBUTE_CATEGORY    \n" + 
                               "        ,ATTRIBUTE1            \n" + 
                               "        ,ATTRIBUTE2            \n" + 
                               "        ,ATTRIBUTE3            \n" + 
                               "        ,ATTRIBUTE4            \n" + 
                               "        ,ATTRIBUTE5            \n" + 
                               " FROM  XXQP_PDFT_DISTRIBUCION\n" + 
                               " WHERE IS_ENABLED = 'Y' ";
              if("Y".equals(strCrearFlag)){
                  strPrepStmt =strPrepStmt+" AND ATTRIBUTE1 ='Y'";
              }else if("Y".equals(strActualizarFlag)){
                  strPrepStmt =strPrepStmt+" AND ATTRIBUTE2 ='Y'";
              }
           
              int count = 0; 
              PreparedStatement prepStmt = null;
              ResultSet resultSet = null;
              try
              {
                prepStmt = connection.prepareStatement(strPrepStmt,ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                resultSet = prepStmt.executeQuery();
              
                while(resultSet.next()){
                    String strCorreo = null; 
                    strCorreo = resultSet.getString("CORREO");  
                    if(count>0){
                        retval = retval+","+strCorreo;
                    }else if(count==0){
                        retval = strCorreo; 
                    }
                   count = count +1; 
               }
                
             } catch (SQLException sqle)
             {
              throw new OAException("EXCEPTION metodo enviaCorreos clase BpoAMImpl:"+sqle.getErrorCode()+" , "+sqle.getMessage(),OAException.ERROR);
             }finally{
            closeResultSet(resultSet);
            closePreparedStatement(prepStmt);
             }
         
        
        java.util.Map<String,String> map = new java.util.HashMap<String,String>();
        map.put("Responsablidad",""); 
        map.put("Usuario",""); 
        map.put("Area",""); 
        map.put("Correo",retval); 
        map.put("strSubject",strSubject);
        map.put("strBody",strBody);
        map.put("strCrearFlag",strCrearFlag);
        map.put("strNumeroFt",strNumeroFt);
        
        if(count>0){
        testDeliveryManager(pInputStream,map,pXxqpPdftBpoHeaderVORowImpl);
        }
        pageContext.writeDiagnostics(this,"Sale enviaCorreosReOn",OAFwkConstants.STATEMENT);
         return retval; 
    }

    /**
     * 
     * @param pXxqpPdftBpoHeaderVORowImpl
     * @return
     */
    public String executeBpoGetInfoCancel(XxqpPdftBpoHeaderVORowImpl pXxqpPdftBpoHeaderVORowImpl) {
        String retval = null; 
        String strCallableStmt = " BEGIN \n" + 
                                 "  APPS.XXQP_PDFT_BPO_PKG.GET_INFO ( PSO_ERRMSG         => :1\n" + 
                                 "                                  , PSO_ERRCOD         => :2\n" + 
                                 "                                  , PCO_INFO           => :3\n" + 
                                 "                                  , PNI_BPO_HEADER_ID  => :4\n "+
                                 "                                  , PSI_CANCEL         => :5\n" + 
                                 "                                  );\n" + 
                                 " END; \n";
        OADBTransaction oadbtransaction = (OADBTransaction)getTransaction();
        OracleCallableStatement oraclecallablestatement =  (OracleCallableStatement)oadbtransaction.createCallableStatement(strCallableStmt, 1);
        oracle.jbo.domain.Number numBpoHeaderId = pXxqpPdftBpoHeaderVORowImpl.getId();
        System.out.println("numBpoHeaderId:"+numBpoHeaderId);
        try {
            oraclecallablestatement.registerOutParameter(1,Types.VARCHAR);
            oraclecallablestatement.registerOutParameter(2,Types.VARCHAR);
            oraclecallablestatement.registerOutParameter(3,Types.CLOB);
            oraclecallablestatement.setDouble(4,numBpoHeaderId.doubleValue());
            oraclecallablestatement.setString(5,"Y");
            oraclecallablestatement.execute();
            java.sql.Clob retvalClob = oraclecallablestatement.getClob(3);
            java.io.Reader reader =retvalClob.getCharacterStream();
            java.io.BufferedReader bufferReader = new java.io.BufferedReader(reader);
            String retvalxml = "";
            String line = null; 
            while((line = bufferReader.readLine())!=null){
                retvalxml = retvalxml+line;
            }
            /** System.out.println("retvalxml:"+retvalxml); **/
            retval = retvalxml;
            bufferReader.close();
            reader.close();
                        
        } catch (SQLException e) {
            System.out.println("SQLException en el metodo executeBpoGetInfo:"+e.getErrorCode());
            throw new OAException("SQLException en el metodo executeBpoGetInfo:"+e.getMessage()+", "+e.getErrorCode(),OAException.ERROR); 
        }catch (IOException ioe) {
            System.out.println("IOException en el metodo executeBpoGetInfo"+ioe.getMessage());
            throw new OAException("IOException en el metodo executeBpoGetInfo:"+ioe.getMessage(),OAException.ERROR);
        }finally{
            closeOracleCallableStatement(oraclecallablestatement);
        }
        
        return retval;
    }

    /**
     * 
     * @param pInputStream
     * @param pOAPageContext
     * @param pXxqpPdftBpoHeaderVORowImpl
     * @return
     */
    public String enviaCorreosPorCancelacion(InputStream pInputStream
                                            ,OAPageContext pOAPageContext
                                            ,XxqpPdftBpoHeaderVORowImpl pXxqpPdftBpoHeaderVORowImpl) {
        pOAPageContext.writeDiagnostics(this,"Entra enviaCorreosPorCancelacion",OAFwkConstants.STATEMENT);
        String retval = null;
        OADBTransaction  oADBTransaction = this.getOADBTransaction();
        String strSubject =""; 
        String strBody="";
        MessageToken[] msgtoken1 = {new MessageToken("NO_FT",pXxqpPdftBpoHeaderVORowImpl.getNumeroFt().toString())};
        MessageToken[] msgtoken2 = {new MessageToken("NO_FT",pXxqpPdftBpoHeaderVORowImpl.getNumeroFt().toString())
                                   ,new MessageToken("NOMBRE_CLIENTE",pXxqpPdftBpoHeaderVORowImpl.getNombreDelCliente())
                                   ,new MessageToken("RAZON_SOCIAL",pXxqpPdftBpoHeaderVORowImpl.getRazonSocial())
                                   ,new MessageToken("PRODUCT_ID",pXxqpPdftBpoHeaderVORowImpl.getArticuloOracle())
                                   };
        strSubject = pOAPageContext.getMessage("XXQP","XXQP_PDFT_CANCE_FT_SUBJECT_MSG",msgtoken1);
        strBody = pOAPageContext.getMessage("XXQP","XXQP_PDFT_CANCE_FT_BODY_MSG",msgtoken2);
        strBody = strBody+"\n\nRAZON DE CANCELACION:\n";
        if(null!=pXxqpPdftBpoHeaderVORowImpl.getAttribute1()){
            strBody = strBody+pXxqpPdftBpoHeaderVORowImpl.getAttribute1();
        }
        
        Connection connection =   oADBTransaction.getJdbcConnection();
          String strPrepStmt = " SELECT ID                     \n" + 
                               "        ,RESPONSABILIDAD   \n" + 
                               "        ,USUARIO               \n" + 
                               "        ,AREA                  \n" + 
                               "        ,CORREO               \n" + 
                               "        ,IS_ENABLED               \n" + 
                               "        ,CREATED_BY               \n" + 
                               "        ,CREATION_DATE          \n" + 
                               "        ,LAST_UPDATED_BY        \n" + 
                               "        ,LAST_UPDATE_DATE      \n" + 
                               "        ,LAST_UPDATE_LOGIN     \n" + 
                               "        ,ATTRIBUTE_CATEGORY    \n" + 
                               "        ,ATTRIBUTE1            \n" + 
                               "        ,ATTRIBUTE2            \n" + 
                               "        ,ATTRIBUTE3            \n" + 
                               "        ,ATTRIBUTE4            \n" + 
                               "        ,ATTRIBUTE5            \n" + 
                               " FROM  XXQP_PDFT_DISTRIBUCION\n" + 
                               " WHERE IS_ENABLED = 'Y'\n" +
                               " AND ATTRIBUTE3 = 'Y'";
            
           
              int count = 0; 
              PreparedStatement prepStmt = null;
              ResultSet resultSet = null;
              try
              {
                prepStmt = connection.prepareStatement(strPrepStmt,ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                resultSet = prepStmt.executeQuery();
                while(resultSet.next()){
                    String strCorreo = null; 
                    strCorreo = resultSet.getString("CORREO");  
                    if(count>0){
                        retval = retval+","+strCorreo;
                    }else if(count==0){
                        retval = strCorreo; 
                    }
                   count = count +1; 
               }
                
             } catch (SQLException sqle)
             {
              throw new OAException("EXCEPTION metodo enviaCorreosPorCancelacion clase BpoAMImpl:"+sqle.getErrorCode()+" , "+sqle.getMessage(),OAException.ERROR);
             }finally{
              closeResultSet(resultSet);
              closePreparedStatement(prepStmt);
             }
        
        java.util.Map<String,String> map = new java.util.HashMap<String,String>();
        map.put("Responsablidad",""); 
        map.put("Usuario",""); 
        map.put("Area",""); 
        map.put("Correo",retval); 
        map.put("strSubject",strSubject);
        map.put("strBody",strBody);
        map.put("strCancelFlag","Y");
        map.put("strNumeroFt",pXxqpPdftBpoHeaderVORowImpl.getNumeroFt().toString()); 
        if(count>0){
        testDeliveryManager(pInputStream,map,pXxqpPdftBpoHeaderVORowImpl);
        }
        pOAPageContext.writeDiagnostics(this,"Sale enviaCorreosPorCancelacion:"+retval,OAFwkConstants.STATEMENT);
        return retval;                                       
    }
    
}
